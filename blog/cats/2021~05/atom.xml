<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2021~05 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2021~05/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2025-07-21T17:22:06+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu 搭建OpenVPN服务器以及客户端的使用]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/05/31/base-openvpn/"/>
    <updated>2021-05-31T17:14:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/05/31/base-openvpn</id>
    <content type="html"><![CDATA[<p><a href="/download/tools/openvpn-2.4.11-1.el7.x86_64.rpm">openvpn-2.4.11-1.el7.x86_64.rpm</a></p>

<p><a href="/download/tools/pkcs11-helper-1.11-3.el7.x86_64.rpm">pkcs11-helper-1.11-3.el7.x86_64.rpm</a></p>

<p><a href="/download/tools/etc.openvpn.tar">配置样例etc.openvpn.tar</a></p>

<hr />

<p><a href="http://www.manongjc.com/detail/6-eqkmpihxsfrrauu.html">http://www.manongjc.com/detail/6-eqkmpihxsfrrauu.html</a></p>

<p><a href="http://blog.sina.com.cn/s/blog_54bf1380010007uz.html">http://blog.sina.com.cn/s/blog_54bf1380010007uz.html</a></p>

<p><a href="https://my.oschina.net/randolphcyg/blog/4920516">https://my.oschina.net/randolphcyg/blog/4920516</a></p>

<h3>搭建过程：</h3>

<h4>1、安装前准备</h4>

<pre><code>    # 安装openssl和lzo，lzo用于压缩通讯数据加快传输速度
    sudo apt-get install openssl libssl-dev
    sudo apt-get install lzop
</code></pre>

<h3>2、安装及配置OpenVPN和easy-rsa</h3>

<pre><code>    # 安装openvpn和easy-rsa
    sudo apt-get install openvpn
    sudo apt-get install easy-rsa
</code></pre>

<pre><code>    # 修改vars文件
    sudo su
    cd /usr/share/easy-rsa/
    vim vars
</code></pre>

<pre><code>    # 修改注册信息，比如公司地址、公司名称、部门名称等。
    export KEY_COUNTRY="CN"
    export KEY_PROVINCE="Shandong"
    export KEY_CITY="Qingdao"
    export KEY_ORG="MyOrganization"
    export KEY_EMAIL="me@myhost.mydomain"
    export KEY_OU="MyOrganizationalUnit"
</code></pre>

<pre><code>    # 初始化环境变量
    source vars

    # 清除keys目录下所有与证书相关的文件
    # 下面步骤生成的证书和密钥都在/usr/share/easy-rsa/keys目录里
    ./clean-all

    # 生成根证书ca.crt和根密钥ca.key（一路按回车即可）
    ./build-ca

    # 为服务端生成证书和私钥（一路按回车，直到提示需要输入y/n时，输入y再按回车，一共两次）
    ./build-key-server server

    # 每一个登陆的VPN客户端需要有一个证书，每个证书在同一时刻只能供一个客户端连接，下面建立2份
    # 为客户端生成证书和私钥（一路按回车，直到提示需要输入y/n时，输入y再按回车，一共两次）
    ./build-key client1
    ./build-key client2

    # 创建迪菲·赫尔曼密钥，会生成dh2048.pem文件（生成过程比较慢，在此期间不要去中断它）
    ./build-dh

    # 生成ta.key文件（防DDos攻击、UDP淹没等恶意攻击）
    openvpn --genkey --secret keys/ta.key
</code></pre>

<h4>3、创建服务器端配置文件</h4>

<pre><code>    # 在openvpn的配置目录下新建一个keys目录
    mkdir /etc/openvpn/keys

    # 将需要用到的openvpn证书和密钥复制一份到刚创建好的keys目录中
    cp /usr/share/easy-rsa/keys/{ca.crt,server.{crt,key},dh2048.pem,ta.key} /etc/openvpn/keys/

    # 复制一份服务器端配置文件模板server.conf到/etc/openvpn/
    gzip -d /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz
    cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn/

    # 查看server.conf里的配置参数
    grep '^[^#;]' /etc/openvpn/server.conf

    # 编辑server.conf
    vim /etc/openvpn/server.conf
</code></pre>

<pre><code>    port 1194
    # 改成tcp，默认使用udp，如果使用HTTP Proxy，必须使用tcp协议
    proto tcp
    dev tun # 路由模式，桥接模式用dev tap
    # 路径前面加keys，全路径为/etc/openvpn/keys/ca.crt
    ca keys/ca.crt
    cert keys/server.crt
    key keys/server.key  # This file should be kept secret
    dh keys/dh2048.pem
    # 默认虚拟局域网网段，不要和实际的局域网冲突即可。和gre类似，配置在tun0上的ip段
    server 10.8.0.0 255.255.255.0 # 路由模式，桥接模式用server-bridge
    ifconfig-pool-persist ipp.txt
    # 10.0.0.0/8是我这台VPN服务器所在的内网的网段，读者应该根据自身实际情况进行修改
    push "route 10.0.0.0 255.0.0.0"
    # 可以让客户端之间相互访问直接通过openvpn程序转发，根据需要设置
    client-to-client
    # 如果客户端都使用相同的证书和密钥连接VPN，一定要打开这个选项，否则每个证书只允许一个人连接VPN
    duplicate-cn
    keepalive 10 120
    tls-auth keys/ta.key 0 # This file is secret
    comp-lzo
    persist-key
    persist-tun
    # OpenVPN的状态日志，默认为/etc/openvpn/openvpn-status.log
    status openvpn-status.log
    # OpenVPN的运行日志，默认为/etc/openvpn/openvpn.log
    log-append openvpn.log
    # 改成verb 5可以多查看一些调试信息
    verb 5
</code></pre>

<h4>4、配置内核和防火墙，启动服务</h4>

<pre><code>    # 开启路由转发功能
    echo 1 &gt; /proc/sys/net/ipv4/ip_forward
    或
    sed -i '/net.ipv4.ip_forward/s/0/1/' /etc/sysctl.conf
    sed -i '/net.ipv4.ip_forward/s/#//' /etc/sysctl.conf
    sysctl -p

    # 配置防火墙，别忘记保存
    iptables -I INPUT -p tcp --dport 1194 -m comment --comment "openvpn" -j ACCEPT

    # 客户端过来的包以NAT方式访问外网
    iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE

    mkdir /etc/iptables
    iptables-save &gt; /etc/iptables/iptables.conf

    # 关闭ufw防火墙，改成iptables，这一步按需要设置，比较ufw在Ubuntu默认关闭的。iptables和ufw任选一个即可。
    ufw disable

    # 启动openvpn并设置为开机启动
    openvpn server.conf
    或
    systemctl start openvpn@server
    systemctl enable openvpn@server
    # 在systemd单元文件的后面，我们通过指定特定的配置文件名来作为一个实例变量来开启OpenVPN服务，我们的配置文件名称为/etc/openvpn/server.conf，所以我们在systemd单元文件的后面添加@server来开启OpenVPN服务
</code></pre>

<h4>5、创建客户端配置文件client.ovpn（用于客户端软件使用）</h4>

<pre><code>    # 复制一份client.conf模板命名为client.ovpn
    cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/client.ovpn

    # 编辑client.ovpn
    vim /etc/openvpn/client.ovpn

    client
    dev tun # 路由模式
    # 改为tcp
    proto tcp
    # OpenVPN服务器的外网IP和端口
    remote 203.195.1.2 1194
    resolv-retry infinite
    nobind
    persist-key
    persist-tun
    ca ca.crt
    # client1的证书
    cert client1.crt
    # client1的密钥
    key client1.key
    ns-cert-type server
    # 去掉前面的注释
    tls-auth ta.key 1
    comp-lzo
    verb 5
</code></pre>

<h4>6、配置client</h4>

<pre><code>    安装软件，可以和服务器安装的保持一致：

    # 安装openssl和lzo，lzo用于压缩通讯数据加快传输速度
    sudo apt-get install openssl libssl-dev
    sudo apt-get install lzop

    # 安装openvpn和easy-rsa
    sudo apt-get install openvpn
    sudo apt-get install easy-rsa
</code></pre>

<p>在服务器上下载回需要的文件</p>

<pre><code>    scp /etc/openvpn/client.ovpn /etc/openvpn/keys/ca.crt /etc/openvpn/keys/client1.crt /etc/openvpn/keys/client1.key /etc/openvpn/keys/ta.key root@client:/etc/openvpn/keys
</code></pre>

<p>将OpenVPN服务器上的client.ovpn、ca.crt、client1.crt、client1.key、ta.key上传到Linux客户端安装目录下的/etc/openvpn文件夹</p>

<pre><code>    [root@linux64 openvpn]# pwd
    /etc/openvpn
    [root@linux64 openvpn]# ls
    ca.crt client1.crt client1.key client.ovpn conf ta.key
</code></pre>

<p>启动客户端
<code>
    openvpn --daemon --cd /etc/openvpn --config client.ovpn --log-append /var/log/openvpn.log &amp;
</code></p>

<p>增加需要走vpn的net
<code>
    route add -net 180.101.49.0/24 gw 10.8.0.5
</code></p>

<p>上面是以守护进程启动的，可以把上面脚本放在/etc/rc.local实现开机启动。或者使用以服务的形式启动，如果想清晰明了，建议放在启动脚本。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js异步、同步ajax]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/05/31/lang-web-ajax/"/>
    <updated>2021-05-31T13:53:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/05/31/lang-web-ajax</id>
    <content type="html"><![CDATA[<h4>html</h4>

<pre><code>    &lt;input type='button' id='modify_{$table}' onClick="noModify('{$table}', 'modify_{$table}')" value='test'&gt;
</code></pre>

<h4>js</h4>

<pre><code>    function noModify(table, bid)
    {
        var idadd = 'is_add_' + table;
        var param = {};
        param[idadd] = '1';
        htmlobj=$.ajax({
            type: 'post',
            url: test.php,
            async: true,
            data: param,
            success: function(html) {
                document.getElementById(bid).disabled = 'disabled';
            }
        });
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[页面内容已修改，您确定要离开？]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/05/30/lang-web-before/"/>
    <updated>2021-05-30T17:34:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/05/30/lang-web-before</id>
    <content type="html"><![CDATA[<h4>html</h4>

<pre><code>    &lt;input style='display:none' name='beforeunload' id='beforeunload' value='0'&gt;

    &lt;button id='{$idpre}_edit' type='button' class=submit onclick=enable_all()&gt;编辑&lt;/button&gt;
    &lt;input id='{$addidpre}_submit' class='submit' type='submit' value='提交' onclick=submit_it()&gt;
</code></pre>

<h4>js</h4>

<pre><code>    function enable_all() {
        var b = document.getElementById('beforeunload');
        if (b !== null)
            b.value = 2;
    }

    function submit_it() {
        var b = document.getElementById('beforeunload');
        if (b !== null)
            b.value = 1;
    }

    window.addEventListener("beforeunload", function(e) {
        var val = document.getElementById('beforeunload').value;
        if (val &gt; 1) {
            var confirmationMessage = "您是否要离开 - 您输入的数据可能不会被保存。";
            (e || window.event).returnValue = confirmationMessage; // Gecko and Trident
            return confirmationMessage; // Gecko and WebKit});
        }
    });
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[table行随鼠标移动变色示例]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/05/29/lang-web-table-color/"/>
    <updated>2021-05-29T14:16:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/05/29/lang-web-table-color</id>
    <content type="html"><![CDATA[<p><a href="https://www.jiangweishan.com/article/svg1486310400790.html">https://www.jiangweishan.com/article/svg1486310400790.html</a></p>

<h4>1、设计表格</h4>

<pre><code>    &lt;body class="html_body"&gt;
    &lt;div class="body_div"&gt;
    &lt;table id="tab"&gt;
        &lt;tr style="background: #000000;color: #FFFFFF;font-weight: bolder;"&gt;
            &lt;th&gt;工号&lt;/th&gt;
            &lt;th&gt;姓名&lt;/th&gt;
            &lt;th&gt;年龄&lt;/th&gt;
            &lt;th&gt;性别&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010101&lt;/td&gt;
            &lt;td&gt;张峰&lt;/td&gt;
            &lt;td&gt;56&lt;/td&gt;
            &lt;td&gt;男&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010102&lt;/td&gt;
            &lt;td&gt;李玉&lt;/td&gt;
            &lt;td&gt;42&lt;/td&gt;
            &lt;td&gt;女&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010103&lt;/td&gt;
            &lt;td&gt;王珂&lt;/td&gt;
            &lt;td&gt;36&lt;/td&gt;
            &lt;td&gt;男&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010104&lt;/td&gt;
            &lt;td&gt;张钰&lt;/td&gt;
            &lt;td&gt;31&lt;/td&gt;
            &lt;td&gt;女&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010105&lt;/td&gt;
            &lt;td&gt;朱顾&lt;/td&gt;
            &lt;td&gt;44&lt;/td&gt;
            &lt;td&gt;男&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010106&lt;/td&gt;
            &lt;td&gt;胡雨&lt;/td&gt;
            &lt;td&gt;35&lt;/td&gt;
            &lt;td&gt;女&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010107&lt;/td&gt;
            &lt;td&gt;刘希&lt;/td&gt;
            &lt;td&gt;30&lt;/td&gt;
            &lt;td&gt;男&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010108&lt;/td&gt;
            &lt;td&gt;孙宇&lt;/td&gt;
            &lt;td&gt;45&lt;/td&gt;
            &lt;td&gt;女&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010109&lt;/td&gt;
            &lt;td&gt;谷雨&lt;/td&gt;
            &lt;td&gt;33&lt;/td&gt;
            &lt;td&gt;男&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2014010110&lt;/td&gt;
            &lt;td&gt;科宇&lt;/td&gt;
            &lt;td&gt;45&lt;/td&gt;
            &lt;td&gt;女&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
    &lt;/div&gt;
    &lt;/body&gt;
</code></pre>

<h4>2、设计样式</h4>

<pre><code>    .html_body .body_div {
        width: 1340;
        height: 595;
    }
    .body_div {
        font-size: 12px;
        background-color: #CCCCCC;
    }
    .tr_odd {
        background-color: orange;
    }
    .tr_even {
        background-color: aqua;
    }
    .mouse_color {
        background-color: green;
    }
    #tab {
        border: 1px #FF0000 solid;
        text-align: center;
        width: 100%;
        height: 100%;
    }
</code></pre>

<h4>3、设计JS</h4>

<pre><code>    //设置奇数行背景色
    //$("#tab tr:odd").find("td").addClass("tr_odd");
    $("#tab tr:odd").addClass("tr_odd");
    //设置偶数行背景色
    $("#tab tr:even").addClass("tr_even");

    // 鼠标移到的颜色
    $("#tab tr").mouseover(function() {
        $(this).addClass("mouse_color");
    });

    // 鼠标移出的颜色
    $("#tab tr").mouseout(function() {
        $(this).removeClass("mouse_color");
    });
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[form 提交前检查]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/05/21/lang-web-form-check/"/>
    <updated>2021-05-21T15:05:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/05/21/lang-web-form-check</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/min-yu/p/11187485.html">https://www.cnblogs.com/min-yu/p/11187485.html</a></p>

<p>onsubmit只能表单上使用,提交表单前会触发, onclick是按钮等控件使用, 用来触发点击事件。</p>

<p>在提交表单前，一般都会进行数据验证，可以选择在submit按钮上的onclick中验证,也可以在onsubmit中验证。</p>

<p>但是onclick比onsubmit更早的被触发。</p>

<p>onsubmit处理函数返回false，onclick函数返回false，都不会引起表单提交。</p>

<h4>onsubmit</h4>

<pre><code>    &lt;script language="javascript"&gt;
        function CheckPost()
        {
            if (addForm.user.value == "")
            {
                alert("请填写用户名！");
                addForm.username.focus();
                return false;
            }
            if (addForm.title.value.length &lt; 5)
            {
                alert("标题不能少于5个字符！");
                addForm.title.focus();
                return false;
            }
            return true;
        }
    &lt;/script&gt;

    &lt;form action="test.php" method="post" name="addForm" onsubmit="return CheckPost();"&gt;
        &lt;div&gt;用户:&lt;input type="text" size="10" name="user" maxlength="20"/&gt;&lt;/div&gt;
        &lt;div&gt;标题:&lt;input type="text" name="title" maxlength="50"/&gt;&lt;/div&gt;
        &lt;div&gt;内容:&lt;textarea name="content" rows="8" cols="30"&gt;&lt;/textarea&gt;&lt;/div&gt;
        &lt;div&gt;&lt;input type="submit" name="submit" value="发表留言"/&gt;&lt;/div&gt;
    &lt;/form&gt;
</code></pre>

<h4>onclick</h4>

<pre><code>    &lt;script language="javascript"&gt;
        function SendForm()
        {
            if(CheckPost())
            {
                document.addForm.submit();
            }
        }

        function CheckPost()
        {
             if (addForm.user.value == "")
             {
                 alert("请填写用户名！");
                 addForm.username.focus();
                 return false;
             }
             if (addForm.title.value.length &lt; 5)
             {
                 alert("标题不能少于5个字符！");
                 addForm.title.focus();
                 return false;
             }
             return true;
        }
    &lt;/script&gt;

    &lt;form action="test.php" method="post" name="addForm"&gt;
        &lt;div&gt;用户:&lt;input type="text" size="10" name="user" maxlength="20"/&gt;&lt;/div&gt;
        &lt;div&gt;标题:&lt;input type="text" name="title" maxlength="50"/&gt;&lt;/div&gt;
        &lt;div&gt;内容:&lt;textarea name="content" rows="8" cols="30"&gt;&lt;/textarea&gt;&lt;/div&gt;
        &lt;div&gt;&lt;input type="button" name="submit" value="发表留言" onclick="SendForm();"/&gt;&lt;/div&gt;
    &lt;/form&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
