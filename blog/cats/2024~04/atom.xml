<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2024~04 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2024~04/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-04-26T14:38:06+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[centos7下httpd服务对tmp目录操作]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/04/26/tools-apache2-tmp/"/>
    <updated>2024-04-26T14:34:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/04/26/tools-apache2-tmp</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/jsbba/article/details/105627202">https://blog.csdn.net/jsbba/article/details/105627202</a></p>

<p>在centos7下操作tmp目录出现各种找到不文件等问题，明白文件就在/tmp目录下，权限也有就是读取不到，原因是使用了private tmp</p>

<pre><code>    cat /usr/lib/systemd/system/httpd.service
</code></pre>

<p>找到以下配置</p>

<pre><code>    PrivateTmp=true
</code></pre>

<p>在默认未true时 这个服务对应的tmp目录会虚拟到/tmp/systemd-private-xxxxx-httpd.service-xxxx/这个里面的/tmp文件夹</p>

<p>可以直接讲true改成false</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx 禁用代理缓冲]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/04/26/nginx-proxy-buffer/"/>
    <updated>2024-04-26T14:16:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/04/26/nginx-proxy-buffer</id>
    <content type="html"><![CDATA[<p><a href="https://www.saoniuhuo.com/question/detail-2752805.html">https://www.saoniuhuo.com/question/detail-2752805.html</a></p>

<p>浏览器中收到这些错误：</p>

<pre><code>    Firefox中的: NS_ERROR_NET_PARTIAL_TRANSFER

    Chrome: net::ERR_HTTP2_PROTOCOL_ERROR 200
</code></pre>

<h4>禁用代理缓冲：</h4>

<pre><code>    location ~ ^/rails/active_storage/disk {
        ...
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_buffering off;
        ...
    }
</code></pre>

<p>这样就解决了问题</p>

<p><a href="https://www.pianshen.com/article/2410401164/">https://www.pianshen.com/article/2410401164/</a></p>

<h4>缓冲控制</h4>

<p>如果禁止缓冲，那么当Nginx一收到后端的反馈就同时传给客户端。</p>

<p>nginx 不会从被代理的服务器读取整个反馈信息。</p>

<p>nginx可从服务器一次接收的最大数据大小由  proxy_buffer_size 控制。
<code>
    proxy_buffering    off;
    proxy_buffer_size  128k;
    proxy_buffers 100  128k;
</code></p>

<p>相关参数</p>

<p>proxy_buffer_size</p>

<p>语法: proxy_buffer_size the_size</p>

<p>默认值: proxy_buffer_size 4k/8k</p>
]]></content>
  </entry>
  
</feed>
