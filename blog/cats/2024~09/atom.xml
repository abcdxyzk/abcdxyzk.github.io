<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2024~09 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2024~09/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2025-07-21T17:22:06+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[交换机开启telnet]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/26/network-telnet/"/>
    <updated>2024-09-26T16:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/26/network-telnet</id>
    <content type="html"><![CDATA[<h4>华为与H3C交换机打开或关闭告警信息</h4>

<p><a href="https://blog.csdn.net/weixin_44657888/article/details/122612537">https://blog.csdn.net/weixin_44657888/article/details/122612537</a></p>

<pre><code>    undo terminal monitor   关闭
    terminal monitor    开启
</code></pre>

<p>或
<code>
    undo info-center enable 关闭
    info-center enable  开启
</code></p>

<h4>H3C &amp; 华为</h4>

<p><a href="https://blog.csdn.net/qq_14829643/article/details/133721759">https://blog.csdn.net/qq_14829643/article/details/133721759</a></p>

<p><a href="https://blog.csdn.net/weixin_38912654/article/details/102942423">https://blog.csdn.net/weixin_38912654/article/details/102942423</a></p>

<p><a href="https://blog.csdn.net/weixin_34367845/article/details/92891126">https://blog.csdn.net/weixin_34367845/article/details/92891126</a></p>

<p><a href="https://blog.csdn.net/u013667796/article/details/126339807">https://blog.csdn.net/u013667796/article/details/126339807</a></p>

<pre><code>    sys
    interface vlan-interface 1
    ip address 192.168.1.234 24
    quit

    user-interface vty 0 4
    authentication-mode password
    set authentication password simple abc123
    screen-length 0     配置终端显示行数
    # screen-length 0  temporary
    idle-timeout 60     配置连接超时分钟数

    # user privilege level 3  # 华为3328F
    quit

    ip route-static 0.0.0.0 0.0.0.0 192.168.1.254
    super password level 3 simple abc123

    telnet server enable
    protocol inbound [ssh|telnet|all] 配置VTY用户界面支持的协议

    display user-interface
</code></pre>

<h4>H3C S1600</h4>

<p><a href="https://www.h3c.com/cn/d_201812/1135303_30005_0.htm#_Toc532300783">H3C S1600系列以太网交换机 用户手册-6W208</a></p>

<pre><code>    sys
    interface vlan-interface 1
    ip address 192.168.1.234 24
    ip gateway 192.168.1.254
    quit

    user-interface vty 0 4
    set authentication password simple abc123   # VTY用户认证
    idle-timeout 30     # 设置连接用户超时中断时间的可选取的分钟的取值
    quit

    password simple abc123

    # telnet 默认是开启的
    ip telnet shutdown
    undo ip telnet shutdown
</code></pre>

<h4>锐捷S2910-24GT4SFP-L</h4>

<p><a href="https://blog.csdn.net/qq_45371244/article/details/129667289">https://blog.csdn.net/qq_45371244/article/details/129667289</a></p>

<pre><code>    Ruijie&gt;

    Ruijie&gt;enable    ---进入特权模式

    Ruijie#config    ---进入全局配置模式

    Ruijie(config)#interface Vlan 1    ---进入Vlan 1端口

    Ruijie(config-if-VLAN 1)#ip address 192.168.1.1 255.255.255.0    ---给Vlan 1配置管理IP

    Ruijie(config-if-VLAN 1)#exit    ---退回到全局模式


    2.配置Telent密码

    （1）用Telnet模式登录时使用密码登录交换机配置

    Ruijie(config)#line vty 0 4    ---进入Telnet密码配置模式，0 4表示允许共5个用户（即用户0至用户5一共五位用户）同时使用Telnet模式登入到交换机

    Ruijie(config-line)#login    ---启动密码登录

    Ruijie(config-line)#password ruijie    ---设置密码为ruijie

    Ruijie(config-line)#exec-timeout 60    ---超时时间分钟

    Ruijie(config-line)#exit    ---退回到全局模式

    Ruijie(config)#enable password ruijie    ---设置enable登录密码为ruijie

    Ruijie(config)#end    ---退出到特权模式

    Ruijie#write    ---确认配置正确，保存已经设置好的配置


    username admin password ruijie    ---设置远程登录的用户名为admin密码为ruijie

    Ruijie#show interfaces vlan 1
</code></pre>

<h4>博达</h4>

<p><a href="https://wenku.baidu.com/view/0aa095b501d276a20029bd64783e0912a2167c99.html?_wkts_=1729989536547">https://wenku.baidu.com/view/0aa095b501d276a20029bd64783e0912a2167c99.html?_wkts_=1729989536547</a></p>

<p><a href="https://www.cnblogs.com/rivanwang/p/14704184.html">https://www.cnblogs.com/rivanwang/p/14704184.html</a></p>

<p>S2548GX 博达路由器console线 与 思科/华为 不通用。</p>

<p>需要 RLC0301</p>

<pre><code>    Switch&gt; enable
    Switch# show configuration
    Switch# show interface vlan 1

    Switch# config
    Switch_config# exec-timeout 3600    ---超时时间秒
    Switch_config# username admin password abc123
    Switch_config# terminal length 0

    Switch_config# ip default-gateway 192.168.1.1
</code></pre>

<h4>查看vlan mac</h4>

<pre><code>    &lt;suncables9306&gt;display interface Vlanif main

    &lt;Quidway&gt;display interface Vlan-interface 1

    &lt;H3C&gt;display interface Vlan-interface 1

    Ruijie#show interfaces vlan 1
    Switch#show interface vlan 1
</code></pre>

<h4>S1728GWR-4P怎么登陆web管理界面</h4>

<p><a href="https://support.huawei.com/enterprise/zh/knowledge/EKB1000067306">https://support.huawei.com/enterprise/zh/knowledge/EKB1000067306</a></p>

<p>在地址栏中输入Web网管客户端的默认URL(Universal Resource Locator)地址：<a href="http://192.168.0.1%EF%BC%8C%E5%B9%B6%E6%8C%89%E2%80%9CEnter%E2%80%9D%E9%94%AE%EF%BC%8C%E5%87%BA%E7%8E%B0%E2%80%9CUser">http://192.168.0.1%EF%BC%8C%E5%B9%B6%E6%8C%89%E2%80%9CEnter%E2%80%9D%E9%94%AE%EF%BC%8C%E5%87%BA%E7%8E%B0%E2%80%9CUser</a> Login”用户登录对话框。如图1所示。（ip地址不对的话换192.168.1.253）</p>

<p>默认用户名和密码分别为admin、Admin@123。 （不行的话换admin admin试试）</p>

<h4>中兴、皖通邮电</h4>

<p><a href="https://blog.csdn.net/yf2571633445/article/details/124708466">https://blog.csdn.net/yf2571633445/article/details/124708466</a>
<a href="https://blog.csdn.net/m0_71089072/article/details/132962658">https://blog.csdn.net/m0_71089072/article/details/132962658</a>
<a href="https://www.59519.com/?id=37">https://www.59519.com/?id=37</a>
<a href="https://wenku.baidu.com/view/86d3203310661ed9ac51f306.html?_wkts_=1742519106980&amp;needWelcomeRecommand=1">https://wenku.baidu.com/view/86d3203310661ed9ac51f306.html?_wkts_=1742519106980&amp;needWelcomeRecommand=1</a></p>

<pre><code>    enable 18
    密码:zxr10
    configure terminal

    system-user
    user-name zte
    password zxr10
    default-privilege-level 15
    bind authentication-template 1
    bind authorization-template 1
    exit

    authentication-template 1
    bind aaa-authentication-template 2001
    exit

    authorization-template 1
    bind aaa-authorization-template 2001
    #local-privilege-level 15
    exit
    exit

    aaa-authentication-template 2001
    aaa-authentication-type local
    exit

    aaa-authorization-template 2001
    aaa-authorization-type none
    exit
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ffmpeg分离MP3文件报错]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/20/ffmpeg-mp3/"/>
    <updated>2024-09-20T10:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/20/ffmpeg-mp3</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_44736603/article/details/121537824">https://blog.csdn.net/weixin_44736603/article/details/121537824</a></p>

<p>使用ffmpeg视频中分离出MP3文件报错</p>

<p>Automatic encoder selection failed for output stream #0:0. Default encoder for format mp3 (codec mp3) is probably disabled. Please choose an encoder manually.
Error selecting an encoder for stream 0:0</p>

<p>问题原因在于只有mp3的解码库，没有mp3编码库导致的，需要添加libmp3lame第三方库。</p>

<p>添加libmp3lame库方式</p>

<p>下载压缩包 <a href="https://sourceforge.net/projects/lame/files/lame/">https://sourceforge.net/projects/lame/files/lame/</a></p>

<p>解压 ，进入lame-3.100目录下，在终端打开</p>

<p>依次执行</p>

<pre><code>    ./configure --enable-shared
    make
    make install
</code></pre>

<p>安装ffmpeg时， &ndash;enable-libmp3lame引入libmp3lame</p>

<pre><code>    ./configure --enable-shared --enable-libmp3lame
    make
    # make install
</code></pre>

<p>安装完毕之后</p>

<pre><code>    vim /etc/ld.so.conf

    添加
    /usr/local/lib/

    再执行
    ldconfig
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[`_` 通配符 -- 匹配一个字符]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/20/sqlserver-_/"/>
    <updated>2024-09-20T09:57:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/20/sqlserver-_</id>
    <content type="html"><![CDATA[<p><a href="https://learn.microsoft.com/zh-cn/sql/t-sql/language-elements/wildcard-match-one-character-transact-sql?view=sql-server-ver16&amp;redirectedfrom=MSDN">https://learn.microsoft.com/zh-cn/sql/t-sql/language-elements/wildcard-match-one-character-transact-sql?view=sql-server-ver16&amp;redirectedfrom=MSDN</a></p>

<p>下划线字符 _ 用于匹配涉及模式匹配的字符串比较操作（如 LIKE 和 PATINDEX）中的任何单个字符。</p>

<h4>简单示例</h4>

<p>以下示例返回以字母 m 开头且第三个字母为 d 的所有数据库名称。 下划线字符指定名称的第二个字符可以是任何字母。 model 数据库和 msdb 数据库均符合此条件。 master 数据库则不符合。</p>

<pre><code>    SELECT name FROM sys.databases
        WHERE name LIKE 'm_d%';
</code></pre>

<pre><code>    name
    -----
    model
    msdb
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[钉钉开放平台API]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/14/lang-web-ding/"/>
    <updated>2024-09-14T10:41:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/14/lang-web-ding</id>
    <content type="html"><![CDATA[<p><a href="https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches">https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches</a></p>

<pre><code>    public $corpId = 'XXX';
    public $AppID = 'XXX';
    public $AgentId = 'XXX';
    public $ClientID = 'XXX';
    public $ClientSecret = 'XXX';


    function index($startpage = 0)
    {
        echo "111&lt;br&gt;";
        echo "&lt;div id='cc'&gt;333&lt;/div&gt;";
        echo "&lt;div id='dd'&gt;333&lt;/div&gt;";
        echo '&lt;script src="https://g.alicdn.com/dingding/dingtalk-jsapi/3.0.25/dingtalk.open.js"&gt;&lt;/script&gt;';
        echo "&lt;script&gt; dd.getAuthCode({ corpId: 'XXX',  success: (res) =&gt; { document.getElementById('cc').innerHTML = res.code; }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";
        // echo "&lt;script&gt; dd.replacePage({ url: 'http://www.baidu.com' }); /* dd.closePage(); */ &lt;/script&gt;";

        // 根据 code access_token 获取免密用户信息
        // curl -X POST -d "code=XXX" "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token=XXX"

        echo "222&lt;br&gt;";
    }

    function auth($startpage = 0)
    {
        echo "555&lt;br&gt;";
        echo "&lt;div id='cc'&gt;444&lt;/div&gt;";
        echo "&lt;div id='dd'&gt;444&lt;/div&gt;";
        echo '&lt;script src="https://g.alicdn.com/dingding/dingtalk-jsapi/3.0.25/dingtalk.open.js"&gt;&lt;/script&gt;';
        //echo "&lt;script&gt; dd.getAuthCode({ corpId: 'XXX',  success: (res) =&gt; { document.getElementById('cc').innerHTML = res.code; }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";
        // echo "&lt;script&gt; dd.replacePage({ url: 'http://www.baidu.com' }); /* dd.closePage(); */ &lt;/script&gt;";
        echo "&lt;script&gt; dd.getAuthCode({ corpId: 'XXX',  success: (res) =&gt; { dd.openLink({url: 'https://www.baidu.com' }); dd.closePage(); }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";

        // 根据 code access_token 获取免密用户信息
        // curl -X POST -d "code=XXX" "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token=XXX"

        echo "666&lt;br&gt;";
    }

    function auth2($startpage = 0)
    {
        echo "555&lt;br&gt;";
        echo "&lt;div id='cc'&gt;444&lt;/div&gt;";
        echo "&lt;div id='dd'&gt;444&lt;/div&gt;";
        echo '&lt;script src="https://g.alicdn.com/dingding/dingtalk-jsapi/3.0.25/dingtalk.open.js"&gt;&lt;/script&gt;';

        $url = "http://n.com/rs/ding/auth2";
        $nonceStr = 'kk';
        $agentId = $this-&gt;AgentId;
        $timeStamp = time() * 1000;
        $corpId = $this-&gt;corpId;

        $jsticket = 'XXX';

        $plain = "jsapi_ticket=" . $jsticket . "&amp;noncestr=" . $nonceStr . "&amp;timestamp=" . $timeStamp . "&amp;url=" . $url;
        echo $plain;

        // TODO
        $sign = sha1($plain);
        var_dump($sign);


        //echo "&lt;script&gt; dd.getAuthCode({ corpId: 'XXX',  success: (res) =&gt; { document.getElementById('cc').innerHTML = res.code; }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";
        // echo "&lt;script&gt; dd.replacePage({ url: 'http://www.baidu.com' }); /* dd.closePage(); */ &lt;/script&gt;";
        echo "&lt;script&gt; dd.getAuthCode({ corpId: 'XXX',  success: (res) =&gt; { dd.openLink({url: 'https://www.baidu.com' }); dd.closePage(); }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";

        // 根据 code access_token 获取免密用户信息
        // curl -X POST -d "code=XXX" "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token=XXX"

        echo "666&lt;br&gt;";
    }



    function gettoken()
    {
        return 'XXX';

        $cget = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_GET , DingTalkConstant::$FORMAT_JSON);
        $req = new OapiGettokenRequest();
        $req-&gt;setAppkey($this-&gt;ClientID);
        $req-&gt;setAppsecret($this-&gt;ClientSecret);
        $resp = $cget-&gt;execute($req, '', "https://oapi.dingtalk.com/gettoken");
        var_dump($resp-&gt;access_token);
        var_dump($resp);
    }

    // 获取jsapiTicket
    function jsapiTicket()
    {
        $accessToken = $this-&gt;gettoken();

        $url = "https://api.dingtalk.com/v1.0/oauth2/jsapiTickets";

        $header = array('Content-Type: application/json', "x-acs-dingtalk-access-token: {$accessToken}");

        $fields = array(
                '1' =&gt; '1'
            );
        $postfields = json_encode($fields);
        //var_dump($postfields);
        $res = $this-&gt;Wxapi_model-&gt;queryUrl($url, $header, $postfields);
        $res = json_decode($res, true);
        var_dump($res);
    }


    // 获取免密用户信息
    function getuserinfo()
    {
        $code = $this-&gt;input-&gt;get('code');

        $accessToken = $this-&gt;gettoken();

        $url = "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token={$accessToken}";

        $header = array('Content-Type: application/json');
        $fields = array('code' =&gt; $code);
        $postfields = json_encode($fields);
        $res = $this-&gt;Wxapi_model-&gt;queryUrl($url, $header, $postfields);
        $res = json_decode($res, true);
        if (isset($res['errcode']) and $res['errcode'] == 0) {
            echo $res['errmsg'], "&lt;br&gt;&lt;br&gt;";
            var_dump($res['result']['userid']);
            echo "&lt;br&gt;&lt;br&gt;";
            var_dump($res['result']);
            echo "&lt;br&gt;&lt;br&gt;";
        }
        var_dump($res);
    }


    /*
    // 批量发送人与机器人会话中机器人消息 样例
    curl -X POST -H "x-acs-dingtalk-access-token:"XXX" -H "Content-Type:application/json" -d '{"robotCode":"XXX","userIds":["XXX"],"msgKey":"sampleMarkdown","msgParam":"{\"text\": \"hello text\",\"title\": \"hello title\"}"}' "https://api.dingtalk.com/v1.0/robot/oToMessages/batchSend"

    // 批量发送人与机器人会话中机器人消息
    curl -X POST -H "x-acs-dingtalk-access-token:"XXX" -H "Content-Type:application/json" -d '{"robotCode":"XXX","userIds":["XXX"],"msgKey":"sampleLink","msgParam":"{\"text\": \"hello text\",\"title\": \"hello title\",\"picUrl\":\"https://n.com/.png\",\"messageUrl\":\"dingtalk://dingtalkclient/action/openapp?XXX\"}"}' "https://api.dingtalk.com/v1.0/robot/oToMessages/batchSend"
    */

    // 批量发送人与机器人会话中机器人消息 样例
    function batchSend_test()
    {
        $accessToken = $this-&gt;gettoken();

        $url = "https://api.dingtalk.com/v1.0/robot/oToMessages/batchSend";

        $header = array('Content-Type: application/json', "x-acs-dingtalk-access-token: {$accessToken}");

        $fields = array("robotCode" =&gt; "XXX",
                "userIds" =&gt; ["XXX"],
                "msgKey" =&gt; "sampleMarkdown",
                "msgParam" =&gt; json_encode(["text" =&gt; "hello text", "title" =&gt; "hello title"])
            );
        $postfields = json_encode($fields);
        //var_dump($postfields);
        $res = $this-&gt;Wxapi_model-&gt;queryUrl($url, $header, $postfields);
        $res = json_decode($res, true);
        var_dump($res);
    }

    // 批量发送人与机器人会话中机器人消息
    function batchSend()
    {
        $accessToken = $this-&gt;gettoken();

        $url = "https://api.dingtalk.com/v1.0/robot/oToMessages/batchSend";

        $header = array('Content-Type: application/json', "x-acs-dingtalk-access-token: {$accessToken}");

        $fields = array("robotCode" =&gt; "XXX",
                "userIds" =&gt; ["XXX"],
                "msgKey" =&gt; "sampleLink",
                "msgParam" =&gt; json_encode(["text" =&gt; "hello text", "title" =&gt; "hello title",
                            "picUrl" =&gt; "https://n.com/gztp4.png",
                            "messageUrl" =&gt; "dingtalk://dingtalkclient/action/openapp?XXX"])
            );
        $postfields = json_encode($fields);
        //var_dump($postfields);
        $res = $this-&gt;Wxapi_model-&gt;queryUrl($url, $header, $postfields);
        $res = json_decode($res, true);
        var_dump($res);
    }



    // 发送工作通知
    function MessageCorpconversationAsyncsendV2()
    {
        $accessToken = $this-&gt;gettoken();

        $c = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_POST , DingTalkConstant::$FORMAT_JSON);

        $req = new OapiMessageCorpconversationAsyncsendV2Request();
        $req-&gt;setAgentId($this-&gt;AgentId);
        $req-&gt;setUseridList('XXX');
        $req-&gt;setToAllUser(false);

        /*
        $msg = array(
            "msgtype" =&gt; "text",
            "text" =&gt; ["content"=&gt;"12333"],
            );
        */
        /*
        $msg = array(
            "msgtype" =&gt; "link",
            "link" =&gt; [
                "picUrl" =&gt; "https://n.com/gztp4.png",
                "messageUrl" =&gt; "https://n.com",
                "text" =&gt; "text",
                "title" =&gt; "title"
                ]
            );
        */
        $msg = array(
            "msgtype" =&gt; "link",
            "link" =&gt; [
                "picUrl" =&gt; "https://n.com/gztp4.png",
                "messageUrl" =&gt; "dingtalk://dingtalkclient/action/openapp?XXX",
                "text" =&gt; "text",
                "title" =&gt; "title"
                ]
            );
        $req-&gt;setMsg($msg);

        $resp = $c-&gt;execute($req, $accessToken, "https://oapi.dingtalk.com/topapi/message/corpconversation/asyncsend_v2");
        var_dump($resp);
    }


    // 获取部门列表
    function DepartmentListsub($depid = 1)
    {
        $accessToken = $this-&gt;gettoken();

        $c = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_POST , DingTalkConstant::$FORMAT_JSON);
        $req = new OapiV2DepartmentListsubRequest();
        $req-&gt;setDeptId($depid);
        $req-&gt;setLanguage("zh_CN");
        $resp = $c-&gt;execute($req, $accessToken, "https://oapi.dingtalk.com/topapi/v2/department/listsub");
        var_dump($resp);
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[腾讯地图--静态地图API]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/14/lang-web-staticmap/"/>
    <updated>2024-09-14T10:37:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/14/lang-web-staticmap</id>
    <content type="html"><![CDATA[<p><a href="https://lbs.qq.com/service/staticV2/staticGuide/staticDoc#9">https://lbs.qq.com/service/staticV2/staticGuide/staticDoc#9</a></p>

<h4>图标（markers）</h4>

<pre><code>        echo "&lt;td&gt;";
        $mstr = "&amp;markers=" . $latitude . "," . $longitude;
        $labels = "";
        $et = date('H时i分', strtotime($row-&gt;jstime));
        $labels = "&amp;labels=color:0xff0000|bgcolor:0x00ff00|位置{$et}|" . $latitude . "," . $longitude;
        $zoom = ($data['zoom'] == '') ? "" : "&amp;zoom={$data['zoom']}";
        $key = "key";
        $url = "https://apis.map.qq.com/ws/staticmap/v2/?size={$data['size']}{$zoom}&amp;key={$key}{$mstr}{$labels}";
        $pstr = sprintf("&lt;input type=button style='width:40px;vertical-align:baseline;color:blue;' value='%s' onclick=\"showimg('%s','%s')\"&gt;", '预览', $url, $row-&gt;jstime);
        echo $pstr;
        echo "&lt;/td&gt;";
</code></pre>

<h4>文本（labels） 路径（path）</h4>

<pre><code>
    if (!empty($path)) {
        $pn = count($path);
        if ($pn == 1) {
            $path[] = $path[0];
            $jstime[] = $jstime[0];
            $pn ++;
        }

        $mstr = "&amp;markers=" . $path[0] . "|" . $path[$pn - 1];

        //$path = array_reverse($path);
        $pathstr = "weight:3|" . implode('|', $path);

        $labels = "";
        if ($pn &gt; 1) {
            $st = date('H点i', strtotime($jstime[$pn-1]));
            $et = date('H点i', strtotime($jstime[0]));
            $labels = "&amp;labels=color:0xff0000|bgcolor:0x00aa00|起{$st}|{$path[$pn-1]}|止{$et}|{$path[0]}";
        }

        $zoom = ($data['zoom'] == '') ? "" : "&amp;zoom={$data['zoom']}";

        $key = "key";
        $url = "https://apis.map.qq.com/ws/staticmap/v2/?size={$data['size']}{$zoom}&amp;key={$key}&amp;path={$pathstr}{$mstr}{$labels}";

        echo "&lt;script&gt; document.getElementById('imgid0').src = '{$url}'; &lt;/script&gt;";

        $sm = strtotime($jstime[$pn-1]);
        $em = strtotime($jstime[0]);
        $mm = (int)(($em - $sm) / 60);
        $ss = (int)($em - $sm) % 60;
        $vv = ($em - $sm != 0) ? round($g1s / ($em - $sm), 2) : 0;
        $dstr= "耗时{$mm}分{$ss}秒; 速度{$vv}米/秒; 路程{$g1s}米; 直线{$disD}米";
        echo "&lt;script&gt; document.getElementById('sid').innerHTML = '{$dstr}'; &lt;/script&gt;";
    }
</code></pre>
]]></content>
  </entry>
  
</feed>
