<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog~octopress | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/blog~octopress/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-04-26T14:38:06+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从histats切换为matomo]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/07/07/blog-matomo/"/>
    <updated>2022-07-07T19:19:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/07/07/blog-matomo</id>
    <content type="html"><![CDATA[<p>histats带出多余访问，改为matomo</p>

<p><img src="/images/blog/matomo.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从cnzz切换为histats]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/07/02/blog-histats/"/>
    <updated>2022-07-02T22:36:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/07/02/blog-histats</id>
    <content type="html"><![CDATA[<p>cnzz 无法统计国外地址，换成histats</p>

<p><img src="/images/blog/histats.png" alt="" /></p>

<p><img src="/images/blog/cnzz.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress优化]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/25/octopress-5/"/>
    <updated>2014-11-25T23:34:33+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/25/octopress-5</id>
    <content type="html"><![CDATA[<h2>octopress优化</h2>

<p>能够让octopress在50篇文章下跑进5s，不优化要跑60s左右<br/>
300篇15s左右</p>

<h3>运行过程</h3>

<p>看octopress目录下的Rakefile，里面有generate，preview，watch等。</p>

<p>输入rake generate是就是按照Rakefile中<code>task :generate do</code>执行的。</p>

<p>最主要的两条：</p>

<pre><code>    system "compass compile --css-dir #{source_dir}/stylesheets"
    system "jekyll build"
</code></pre>

<p>第一条是编译css，第二条是生成文章。</p>

<p>第一条不知道如何优化，略过。</p>

<p>第二条接着执行到</p>

<p>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/commands/build.rb</p>

<p>文件的 init_with_program -> process -> build 然后到</p>

<p>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/command.rb 文件的 process_site 然后到</p>

<p>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb 文件的 process，</p>

<p>process代码如下：</p>

<pre><code>    47     def process
    48       reset
    49       read
    50       generate
    51       render
    52       cleanup
    53       write
    54     end
</code></pre>

<p>这里的函数都在这个文件里，主要费时在 generate 和 render。</p>

<h4>1. generate</h4>

<p>generate 会执行 octopress/plugins 目录下的 tag_generator.rb 和 category_generator.rb，</p>

<p>这两个文件的 write_tag_indexes 和 write_category_indexes 分别回构建 tag 和 category 的分类首页。</p>

<p>所以 tag 和 category 越多构建越慢。</p>

<pre><code>    from /home/kk/kk/github/octopress/plugins/rubypants.rb:261:in `to_html'
    from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:31:in `post_filter'
    from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:41:in `post_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:255:in `block in post_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:254:in `each'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:254:in `post_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:224:in `do_layout'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/page.rb:122:in `render'
    from /home/kk/kk/github/octopress/plugins/category_generator.rb:100:in `write_category_index'
    from /home/kk/kk/github/octopress/plugins/category_generator.rb:112:in `block in write_category_indexes'
    from /home/kk/kk/github/octopress/plugins/category_generator.rb:111:in `each'
    from /home/kk/kk/github/octopress/plugins/category_generator.rb:111:in `write_category_indexes'
    from /home/kk/kk/github/octopress/plugins/category_generator.rb:141:in `generate'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:280:in `block in generate'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:279:in `each'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:279:in `generate'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:50:in `process'
</code></pre>

<h4>2. render</h4>

<pre><code>    from /home/kk/kk/github/octopress/plugins/rubypants.rb:261:in `to_html'
    from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:31:in `post_filter'
    from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:41:in `post_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:249:in `block in pre_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:248:in `each'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:248:in `pre_render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:222:in `do_layout'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/page.rb:122:in `render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:299:in `block in render'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:298:in `each'
    from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:298:in `render'
</code></pre>

<p>都是慢在 octopress/plugins/rubypants.rb 的 to_html 函数。</p>

<h3>优化</h3>

<h4>1、to_html 函数的 tokenize 和 gsub 很慢。</h4>

<p>to_html 函数只是把一些' &ldquo;之类的转成html，试了一下不执行to_html，diff出来差别不大，页面上显示也都还OK。单纯的 &lt; 在其他地方已经转好了。</p>

<p>所以 octopress/plugins/octopress_filters.rb 中不执行 to_html</p>

<h4>2、每次计算侧边栏太慢</h4>

<p>所有页面都是按照其 layout 的格式找对应 <code>source/_layout/</code> 下的模板来生成的。</p>

<p>注意 post.html 和 page.html 的最后都有 <code>{ { include_array XXX } }</code>, 这就是说每个页面都要运行 plugins/include_array.rb 中的 render(context) 来生成侧边栏。</p>

<p>但是侧边栏应该是(?)都一样的。所以改成隔一定时间计算一次</p>

<pre><code>     26     @@caltime = 0
     27     @@retstore = ""
     28     def render(context)
     29         if Time.now.to_f - @@caltime &lt; context.registers[:site].config['recaltime']
     30                 return @@retstore;
     31         end
     32         @@caltime = Time.now.to_f
    ...
     58       @@retstore = rtn
</code></pre>

<p>为什么要隔一段时间？因为在 preview 中有改动任何文件就会重新生成一次，这时侧边栏也要重新计算</p>

<h4>3、减小文件大小</h4>

<p>我的侧边栏有二级目录，整个侧边栏比较大，50篇时已经有20k。所以将侧边栏独立成一个文件，用js来load。</p>

<p>plugins/include_array.rb 中加：</p>

<pre><code>    59       fp = File.new('sidebar.html', 'w');
    60       fp.puts(rtn);
    61       fp.puts('&lt;script src="http://abcdxyzk.github.io/javascripts/category.js" type="text/javascript"&gt;&lt;/script&gt;');
    62       fp.puts('&lt;script type="text/javascript"&gt; hadOpenDiv();&lt;/script&gt;');
    63       fp.close();
</code></pre>

<p><code>source/_layout/post.html和source/_layout/page.html</code> 的最后部分改成：</p>

<pre><code>    35 &lt;aside class="sidebar" id='load_sidebar'&gt;
    36 &lt;/aside&gt;
    37 &lt;script type="text/javascript"&gt;
    38   $('#load_sidebar').load('/sidebar.html');
    39 &lt;/script&gt;
</code></pre>

<p>因为 source/index.html 里也有 <code>{ { include_array XXX } }</code>，所以不用担心不执行 plugins/include_array.rb。</p>

<p>问题1：就是"最近评论" 要从 <code>_config.yml</code> 中的 default_asides: 中移到 source/index.html 中。因为js load进的文件中的 document.write 不执行了。这也就是为什么 source/index.html 不采用js load。如果是 <code>&lt;aside&gt;</code> 中增加 div 用来 load 的话，侧边栏缩到底部就没有三列的效果。</p>

<p>问题2：sidebar.html 要写到主目录，source/sidebar.html 中用 ln 软链接到 sidebar.html。因为如果在watch状态直接写到 source/ 目录的话，他就会再次认为文件有改变，又重新生成。造成在不断生成的死循环。细节是在Rakefile文件的 generate 和 preview 中先加软链接再运行其他</p>

<pre><code>    56 task :generate do
    57   system('&gt;`pwd`/sidebar.html')
    58   system('ln -f -s `pwd`/sidebar.html `pwd`/source/sidebar.html')
</code></pre>

<h3>优化效果</h3>

<p>在文件中加入时间输出代码</p>

<pre><code>    p "    #{ __FILE__} line:#{__LINE__} time:#{Time.now.to_f}"
</code></pre>

<p>50篇文章，40个tag，61个category，运行如下：</p>

<pre><code>    kk@kk-laptop:~/kk/github/octopress(source)$ rake generate
    ## Generating Site with Jekyll
    "/home/kk/kk/github/octopress/Rakefile line:62 time:1416933869.1204205"
    identical source/stylesheets/screen.css 
    "/home/kk/kk/github/octopress/Rakefile line:64 time:1416933870.019113"
    Configuration file: /home/kk/kk/github/octopress/_config.yml
                Source: source
           Destination: public
          Generating... 
    "    /home/kk/kk/github/octopress/plugins/category_generator.rb line:110 time:1416933870.7509217"
    "    /home/kk/kk/github/octopress/plugins/category_generator.rb line:114 time:1416933871.8838022"
    "    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:93 time:1416933871.8838577"
    "    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:97 time:1416933872.389736"
    "    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:297 time:1416933872.4271524"
    "    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:301 time:1416933873.8506286"
                        done.
     Auto-regeneration: disabled. Use --watch to enable.
    "/home/kk/kk/github/octopress/Rakefile line:66 time:1416933873.9671116"
    "total = 4.846851825714111"
</code></pre>

<p>total = 4.846851825714111，不优化要60s左右。</p>

<p>300篇</p>

<pre><code>    kk@kk-laptop:~/kk/github/octopress(source)$ rake generate
    ## Generating Site with Jekyll
    "/home/kk/kk/github/octopress/Rakefile line:62 time:1426179501.0918927"
    identical source/stylesheets/screen.css 
    "/home/kk/kk/github/octopress/Rakefile line:64 time:1426179502.0703895"
    Configuration file: /home/kk/kk/github/octopress/_config.yml
                Source: source
           Destination: public
          Generating... 
    "    /home/kk/kk/github/octopress/plugins/category_generator.rb line:110 time:1426179503.376222"
    "    /home/kk/kk/github/octopress/plugins/category_generator.rb line:114 time:1426179508.2033086"
    "    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:93 time:1426179508.2033658"
    "    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:97 time:1426179508.3304708"
    "    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:297 time:1426179508.3851612"
    "    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:301 time:1426179515.877446"
                        done.
     Auto-regeneration: disabled. Use --watch to enable.
    "/home/kk/kk/github/octopress/Rakefile line:66 time:1426179516.2085445"
    "total = 15.116710424423218"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 加站长统计和站内搜索]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/20/octopress-4/"/>
    <updated>2014-11-20T18:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/20/octopress-4</id>
    <content type="html"><![CDATA[<h4>站长统计</h4>

<p>2022-07-07</p>

<p>histats带出多余访问，改为matomo</p>

<hr />

<p>2022-07-02</p>

<p>cnzz 无法统计国外地址，换成histats</p>

<hr />

<p>国内使用很广的CNZZ了，注册后，添加并验证你的网站就可以添加统计代码了，选好自己喜欢的样式，获得代码，可添加到source/_includes/custom/footer.html中。即可查看每天你的博客的流量
<code>
    &lt;script type="text/javascript"&gt;var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1253604690'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s95.cnzz.com/z_stat.php%3Fid%3D1253604690' type='text/javascript'%3E%3C/script%3E"));&lt;/script&gt;
</code></p>

<h4>站内搜索</h4>

<p>2022-07-02</p>

<p>Search 360 达到次数后要收费，换成静态索引</p>

<hr />

<p>2020-08-13</p>

<p>tapirgo 停止服务了, 换成 <a href="https://www.sitesearch360.com">https://www.sitesearch360.com</a></p>

<p>修改：</p>

<pre><code>    diff --git a/sass/partials/_navigation.scss b/sass/partials/_navigation.scss
    index d9614e3c5..4f57afaa1 100644
    --- a/sass/partials/_navigation.scss
    +++ b/sass/partials/_navigation.scss
    @@ -59,6 +59,8 @@ cursor: pointer;
         ul.subscription {
           margin-left: .8em;
           float: right;
    +      width: 100px;
    +      margin-right: -47%;
           li:last-child a { padding-right: 0; }
         }
         ul li {
    @@ -102,7 +104,8 @@ cursor: pointer;
       }
       @media only screen and (min-width: 992px) {
         form {
    -      width: $sidebar-width-wide - $pad-wide - $sidebar-pad-wide*2 + 10px;
    +      width: $sidebar-width-wide - $pad-wide - $sidebar-pad-wide*2 + 210px;
    +      margin-right: 50px;
         }
         ul[data-subscription$=email] + form {
           width: $sidebar-width-wide - $pad-wide - $sidebar-pad-wide*2 - 58px;
    @@ -116,7 +119,7 @@ cursor: pointer;
       }
     }
     @mixin mask-subscription-nav($feed: 'rss.png'){
    -  position: relative; top: 3px;
    +  position: relative; top: 6px;
       text-indent: -999999em;
       background-color: $nav-border-right;
       border: 0;
    diff --git a/source/_includes/navigation.html b/source/_includes/navigation.html
    index cdec89642..5c226aab4 100644
    --- a/source/_includes/navigation.html
    +++ b/source/_includes/navigation.html
    @@ -1,5 +1,3 @@
    -&lt;ul class="subscription" data-subscription="rss"&gt;
    -&lt;li&gt;
     &lt;form action="/search" method="get"&gt;
         &lt;input class="search" name="query" id="query" type="text" placeholder="search..."&gt;
         &lt;input id="btnSubmit" value="search" type="submit"&gt;
    @@ -10,6 +8,22 @@ if (query != null) {
        document.getElementById("query").value = query;
     }
     &lt;/script&gt;
    +
    +&lt;!-- Start of Site Search 360 Scripts --&gt;
    +&lt;script type="text/javascript"&gt;
    +var ss360Config = {
    +    siteId: "abcdxyzk.github.io",
    +    searchBox: {
    +        selector: "input#query",
    +        searchButton: "input#query+input[type='submit']"
    +    }
    +}
    +&lt;/script&gt;
    +&lt;script src="https://cdn.sitesearch360.com/v13/sitesearch360-v13.min.js" async&gt;&lt;/script&gt;
    +&lt;!-- End of Site Search 360 Scripts --&gt;
    +
    +&lt;ul class="subscription" data-subscription="rss"&gt;
    +&lt;li&gt;
     &lt;/li&gt;
       &lt;li&gt;&lt;a href="/atom.xml" rel="subscribe-rss"&gt;RSS&lt;/a&gt;&lt;/li&gt;
</code></pre>

<hr />

<p>为了实现站内搜索(页面不跳转)，</p>

<h5>需要到tapirgo.com注册你的站点，填入atom.xml的url和邮箱地址，tapirgo会生成一对token，我们只使用public token就够了。</h5>

<h5>打开_config.yml文件，加入tapir_token: your_token</h5>

<h5>修改simple_search为你的站点域名simple_search: your_domain</h5>

<h5>在source/javascripts/新建jquery-tapir.js，内容为</h5>

<pre><code>    (function($){
      var el;
      var settings = {};

      var methods = {
        init: function(options) {
          el = this;

          settings = {
                   token: false,
                   query_param: 'query'
                 };

          if (options) {
        $.extend(settings, options);
          }

          if (!settings.token || settings.query_param == '') {
        return this;
          }

          $.getJSON(
        'http://tapirgo.com/api/1/search.json?token=' + settings.token + '&amp;query=' + paramValue(settings.query_param) + '&amp;callback=?', function(data){
          if(settings['complete']) { settings.complete() }
          $.each(data, function(key, val) {
          document.getElementById('search_results').style.display="block";
          document.getElementById('search_results').style.height="100%";
          document.getElementById('search_results').style.overflow="hidden";
              var str1 = val.content;
              var str2 = str1.substr(1, 250);
              str2 = str2.substr(0, Math.min(str2.length, str2.lastIndexOf(" ")));
            el.append('&lt;div id="content" class="inner"&gt;&lt;article class="post"&gt;&lt;h2 class="title"&gt;&lt;a href="' + val.link + '"&gt;' + val.title + '&lt;/a&gt;&lt;/h2&gt;&lt;div class="entry-content"&gt;&lt;div class="date"&gt;Published on: ' + (val.published_on).substr(0,10) + '&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;' + str2 + '...&lt;/p&gt;&lt;br&gt;&lt;a href="' + val.link +'"&gt;Read on &amp;rarr;&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;');
            if(key &gt;= (data.length-1)){
                el.append('&lt;div id="content" class="inner"&gt;&lt;center&gt;&lt;h2 style="border-bottom: 1px solid #ddd;"&gt;Result ends&lt;/h2&gt;&lt;/center&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;');
            }
          });
        }
          );

          return this;
        }
      };

      // Extract the param value from the URL.
      function paramValue(query_param) {
        var results = new RegExp('[\\?&amp;]' + query_param + '=([^&amp;#]*)').exec(window.location.href);
        return results ? results[1] : false;
      }

      $.fn.tapir = function(method) {
        if (methods[method]) {
          return methods[ method ].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || ! method) {
          return methods.init.apply(this, arguments);
        } else {
          $.error('Method ' +  method + ' does not exist on jQuery.tapir');
        }
      };

    })( jQuery );
</code></pre>

<h5>然后在source/search/index.html中</h5>

<pre><code>    ---
    layout: default
    ---
    &lt;h1 class="entry-title"&gt;&lt;center&gt;Search Results&lt;/center&gt;&lt;/h1&gt;
    &lt;div id="search_loading" style="margin: 40px 0"&gt;
        &lt;center&gt;&lt;img src="http://abcdxyzk.github.io/images/loading.gif"&gt;&lt;/center&gt;
    &lt;/div&gt;

    &lt;script type="text/javascript" src="http://abcdxyzk.github.io/javascripts/jquery-tapir.js"&gt;&lt;/script&gt;
    &lt;div id="search_results" style="display:none"&gt;
    &lt;br&gt;
    &lt;/div&gt;
    &lt;script&gt;
         $('#search_results').tapir({
             'token': 'your_token',
             'complete' : function() { document.getElementById('search_loading').style.display="none"; }
         });
    &lt;/script&gt;
</code></pre>

<h5>更新source/_includes/navigation.html</h5>

<p>将原来的google搜索
<code>
    &lt;input type="hidden" name="q" value="site:smarterhjw.com" /&gt;
    &lt;input class="search" type="text" name="q" results="0" placeholder="Search"/&gt;
</code>
更改为
<code>
    &lt;input class="search" name="query" type="text" placeholder="Search..." x-webkit-speech /&gt;
</code>
最后rake generate，就可以了。 此时进行搜索，就不会再跳转到站外去了。</p>

<h5>可以修改一下搜索框展示</h5>

<pre><code>    --- a/sass/partials/_navigation.scss
    +++ b/sass/partials/_navigation.scss
    @@ -74,6 +74,7 @@ body &gt; nav {
           float: right;
           text-align: left;
           padding-left: .8em;
    +      padding-top: .35em;
           width: $sidebar-width-medium - $pad-medium*2 - $sidebar-pad-medium + 20px;
           .search {
         width: 93%;
    @@ -86,7 +87,7 @@ body &gt; nav {
           .search { width: 91%; }
         }
         fieldset.mobile-nav { display: none; }
    -    fieldset[role=search]{ width: 99%; }
    +    fieldset[role=search]{ width: 80%; }
       }
       @media only screen and (min-width: 992px) {
         form {
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress分类中使用二级目录]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopress-3/"/>
    <updated>2014-11-13T23:49:25+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopress-3</id>
    <content type="html"><![CDATA[<h4>1.修改plugins/category_list_tag.rb为</h4>

<pre><code>    # encoding: UTF-8
    module Jekyll
        class CategoryListTag &lt; Liquid::Tag
            def render(context)
                html = ""
                pre = ""
                divout = 0
                categories = context.registers[:site].categories.keys
                categories.sort.each do |category|
                    posts_in_category = context.registers[:site].categories[category].size
                    category_dir = context.registers[:site].config['category_dir']
                    cats = category.split(/~/)
                    if cats.size &gt; 1 and cats[0] == pre
                        if divout == 0
                            html &lt;&lt; "&lt;div id='#{pre}' class='divclass'&gt;"
                            divout = 1
                        end
                        html &lt;&lt; "&lt;li&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/?opendiv=#{pre}'&gt;#{cats[1]} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    else
                        pre = cats[0]
                        if divout &gt; 0
                            html &lt;&lt; "&lt;/div&gt;"
                            divout = 0
                        end
                        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='##' onmousedown=showDiv('#{pre}')&gt;#{category} &lt;/a&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/'&gt;(#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    end
                end
                if divout &gt; 0
                    html &lt;&lt; "&lt;/div&gt;"
                    divout = 0
                end
                html
            end
        end
    end

    Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<!--more-->


<h4>2.修改source/_includes/custom/asides/category_list.html为：注意去掉’\‘</h4>

<pre><code>    &lt;section&gt;
    &lt;h1&gt;Categories&lt;/h1&gt;
    &lt;head&gt;
    &lt;style type="text/css"&gt;

    .divclass
    {
        display:none;
        font-size:12px;
        position:relative;
        left:0px;
        top:0px;
        padding:0px 30px 0px 30px;
    }
    &lt;/style&gt;
    &lt;script language="javascript" type="text/javascript"&gt;

    function showDiv(divName)
    {
        if (document.getElementById(divName).style.display == "block")
            document.getElementById(divName).style.display = "none"; //隐藏层
        else
            document.getElementById(divName).style.display = "block"; //显示层
    }

    function GetRequest(name) {
        var url = location.search; //获取url中"?"符后的字串
        if (url.indexOf("?") != -1) {
            var str = url.substr(1);
            strs = str.split("&amp;");
            for(var i = 0; i &lt; strs.length; i ++) {
                if (name == strs[i].split("=")[0])
                return unescape(strs[i].split("=")[1]);
            }
        }
        return null;
    }
    &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;div id="menu"&gt;
    &lt;ul&gt;
    {\% category_list \%}
    &lt;/ul&gt;
    &lt;/div&gt;
    &lt;/body&gt;
    &lt;/html&gt;

    &lt;script language="javascript" type="text/javascript"&gt;
    var divname = GetRequest("opendiv");
    if (divname != null)
        showDiv(divname)
    &lt;/script&gt;
    &lt;/section&gt;
</code></pre>

<h4>3.使用二级标签的时候先写一个一级标签，写一个一级~二级标签，例如：</h4>

<pre><code> categories:
 - hello
 - hello~hi
</code></pre>

<h4>4.add</h4>

<h5>后来又改成了三级目录，显示调整，单列时间分类等。具体去看源码对应文件。</h5>
]]></content>
  </entry>
  
</feed>
