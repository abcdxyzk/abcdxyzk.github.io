<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: language~python | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/language~python/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-08-15T11:53:43+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python xlsx读取oldval, 转xls、csv]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/07/09/python-xlsx-oldval/"/>
    <updated>2023-07-09T15:47:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/07/09/python-xlsx-oldval</id>
    <content type="html"><![CDATA[<h4>xlsx读取oldval, 转xls</h4>

<pre><code>    #coding:utf-8
    import xlrd
    import xlwt
    import sys

    if len(sys.argv) != 3:
        print 'python export.py xlsx sheet'
        exit(1)

    filename = sys.argv[1]
    sheetname = sys.argv[2]

    data = xlrd.open_workbook(filename)
    #table = data.sheet_by_index(0)
    table = data.sheet_by_name(sheetname.decode('utf-8'))

    workbook = xlwt.Workbook(encoding = 'utf-8')
    worksheet = workbook.add_sheet(sheetname)

    for rn in range(table.nrows):
        line = table.row_values(rn)
        j = 0
        for v in line:
            worksheet.write(rn, j, line[j])
            j = j + 1

    # 保存数据到硬盘
    workbook.save((filename+'.xls'))
</code></pre>

<h4>excel转换为csv</h4>

<p><a href="https://www.jb51.net/article/164478.htm">https://www.jb51.net/article/164478.htm</a></p>

<h5>1 pandas</h5>

<pre><code>    import pandas as pd
    data = pd.read_excel('123.xls','Sheet1',index_col=0)
    data.to_csv('data.csv',encoding='utf-8')
</code></pre>

<h5>2 xlrd</h5>

<pre><code>    #!/usr/bin/env python 
    __author__ = "lrtao2010"
    '''
    Excel文件转csv文件脚本
    需要将该脚本直接放到要转换的Excel文件同级目录下
    支持xlsx 和 xls 格式
    在同级目录下生成名为excel_to_csv.csv 的文件，采用UTF-8编码
    '''
    import xlrd
    import csv
    import os
    #生成的csv文件名
    csv_file_name = 'excel_to_csv.csv'
    def get_excel_list():
      #获取Excel文件列表
      excel_file_list = []
      file_list = os.listdir(os.getcwd())
      for file_name in file_list:
        if file_name.endswith('xlsx') or file_name.endswith('xls'):
          excel_file_list.append(file_name)
      return excel_file_list
    def get_excel_header(excel_name_for_header):
      #获取表头，并将表头全部变为小写
      workbook = xlrd.open_workbook(excel_name_for_header)
      table = workbook.sheet_by_index(0)
      #row_value = table.row_values(0)
      row_value = [i.lower() for i in table.row_values(0)]
      return row_value
    def read_excel(excel_name):
      #读取Excel文件每一行内容到一个列表中
      workbook = xlrd.open_workbook(excel_name)
      table = workbook.sheet_by_index(0) #读取第一个sheet
      nrows = table.nrows
      ncols = table.ncols
      # 跳过表头，从第一行数据开始读
      for rows_read in range(1,nrows):
        #每行的所有单元格内容组成一个列表
        row_value = []
        for cols_read in range(ncols):
          #获取单元格数据类型
          ctype = table.cell(rows_read, cols_read).ctype
          #获取单元格数据
          nu_str = table.cell(rows_read, cols_read).value
          #判断返回类型
          # 0 empty,1 string, 2 number(都是浮点), 3 date, 4 boolean, 5 error
          #是2（浮点数）的要改为int
          if ctype == 2:
            nu_str = int(nu_str)
          row_value.append(nu_str)
        yield row_value

    def xlsx_to_csv(csv_file_name,row_value):
      #生成csv文件
      with open(csv_file_name, 'a', encoding='utf-8',newline='') as f: #newline=''不加会多空行
        write = csv.writer(f)
        write.writerow(row_value)
    if __name__ == '__main__':
      #获取Excel列表
      excel_list = get_excel_list()
      #获取Excel表头并生成csv文件标题
      xlsx_to_csv(csv_file_name,get_excel_header(excel_list[0]))
      #生成csv数据内容
      for excel_name in excel_list:
        for row_value in read_excel(excel_name):
          xlsx_to_csv(csv_file_name,row_value)
      print('Excel文件转csv文件结束 ')
</code></pre>

<p><a href="https://www.cnblogs.com/qican/p/11122206.html">https://www.cnblogs.com/qican/p/11122206.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python读写dbf数据库]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/03/02/python-dbf/"/>
    <updated>2021-03-02T23:08:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/03/02/python-dbf</id>
    <content type="html"><![CDATA[<pre><code>    pip install dbfread
    pip install dbfpy
</code></pre>

<p><a href="https://www.cnblogs.com/zhugaopeng/p/9745800.html">https://www.cnblogs.com/zhugaopeng/p/9745800.html</a></p>

<pre><code>    #coding:utf-8
    import dbfread
    from dbfpy import dbf
    import itertools
    import xlrd
    import sys

    def writeBmh(datas, filename, header):
        db = dbf.Dbf(filename, new=True)
        for kv in header:
            # field = field.encode('GBK')
            db.addField(kv)

        idx = dict()
        n = 0
        for field in datas[0]:
            idx[field] = n
            n  = n + 1

        for record in datas:
            if record[0] == 'bmh':
                continue

            rec = db.newRecord()
            for kv in header:
                value = record[idx[kv[0]]]
                #value = value.encode('utf-8')
                #print value, type(value)
                #if type(value) == unicode:
                if kv[1] == 'D':
                    value = value.replace('-', '')
                elif kv[1] == 'C':
                    rec[kv[0]] = value.encode('GBK')
                elif kv[1] == 'N':
                    rec[kv[0]] = int(value)
                else:
                    rec[kv[0]] = value
            rec.store()
        db.close()


    def readxls(filename):
        data = xlrd.open_workbook(filename)
        table = data.sheet_by_index(0)
        datas = []

        for rn in range(table.nrows):
            datas.append(table.row_values(rn))

        return datas

    f1='mm.xlsx'
    datas = readxls(f1)
    h=[['bmh','C',10],['bmm','C',76],['oldbmh','C',10],['bm','C',30],['bz','C',50]]
    o='m.dbf'
    writeBmh(datas,o,h)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python读取xlsx]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/03/02/python-xlsx/"/>
    <updated>2021-03-02T23:07:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/03/02/python-xlsx</id>
    <content type="html"><![CDATA[<pre><code>    pip install xlrd==1.2.0
</code></pre>

<p><a href="https://www.cnblogs.com/tynam/p/11204895.html">https://www.cnblogs.com/tynam/p/11204895.html</a></p>

<pre><code>    #coding:utf-8
    import xlrd
    import sys

    def readxls(filename):
        data = xlrd.open_workbook(filename)
        table = data.sheet_by_index(0)
        datas = []

        for rn in range(table.nrows):
            datas.append(table.row_values(rn))

        return datas
    f1='mm.xlsx'
    datas = readxls(f1)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python]]></title>
    <link href="http://abcdxyzk.github.io/blog/2017/12/03/lang-python/"/>
    <updated>2017-12-03T13:24:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2017/12/03/lang-python</id>
    <content type="html"><![CDATA[<h4>python dict 是指针</h4>

<pre><code>    [root@localhost tmp]# cat a.py
    a = b = {}
    a[1] = 2
    print a
    print b

    [root@localhost tmp]# python a.py
    {1: 2}
    {1: 2}
</code></pre>

<h4>utf8</h4>

<pre><code>    #coding:utf-8
</code></pre>

<h4>时间戳、int互转</h4>

<pre><code>    t = time.mktime(time.strptime("2020-01-01 00:00:00", "%Y-%m-%d %H:%M:%S"))
    ts = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime(t))
</code></pre>
]]></content>
  </entry>
  
</feed>
