<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: language~web | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/language~web/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-03-26T19:20:58+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ajax使用FormData上传文件]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/02/26/lang-web-FormData/"/>
    <updated>2024-02-26T20:28:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/02/26/lang-web-FormData</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/suflowers1700218/p/14230852.html">https://www.cnblogs.com/suflowers1700218/p/14230852.html</a></p>

<h4>1 使用form表单初始化FormData对象方式上传文件</h4>

<pre><code>    &lt;form id="uploadForm" enctype="multipart/form-data"&gt;
        &lt;input id="file" type="file" name="file"/&gt;
        &lt;button id="upload" type="button"&gt;upload&lt;/button&gt;
    &lt;/form&gt;

    &lt;script&gt;
    $("#upload").click(function () {
        $.ajax({
            url: '/Default/UploadFile',
            type: 'POST',
            cache: false,
            data: new FormData($('#uploadForm')[0]),
            processData: false,
            contentType: false,
            success: function (data) {
                alert(data.result)
            }
        }).fail(function (res) {
            alert("系统错误")
        });
    });
    &lt;/script&gt;
</code></pre>

<p>这里要注意几点：</p>

<pre><code>    processData设置为false。因为data值是FormData对象，不需要对数据做处理。

    &lt;form&gt;标签添加 enctype="multipart/form-data" 属性。

    cache设置为false，上传文件不需要缓存。

    contentType设置为false，不设置contentType值，因为是由&lt;form&gt;表单构造的FormData对象，且已经声明了属性 enctype="multipart/form-data"，所以这里设置为false。

    上传后，服务器端代码需要使用从查询参数名为file获取文件输入流对象，因为&lt;input&gt;中声明的是name="file"
</code></pre>

<h4>2.使用FormData对象添加字段方式上传文件</h4>

<pre><code>    &lt;script&gt;
    $("#upload").click(function () {
        var formData = new FormData();
        formData.append('file', $('#file')[0].files[0]);
        $.ajax({
            url: '/Default/UploadFileByFormData',
            type: 'POST',
            cache: false,
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                alert(data.result)
            }
        }).fail(function (res) {
            alert("系统错误")
        });
    });
    &lt;/script&gt;
</code></pre>

<p>这里有几处不一样：</p>

<pre><code>    append()的第二个参数应是文件对象，即$('#file')[0].files[0]。

    contentType也要设置为‘false’。

    从代码$('#file')[0].files[0]中可以看到一个&lt;input type="file"&gt;标签能够上传多个文件，

    只需要在&lt;input type="file"&gt;里添加multiple或multiple="multiple"属性。
</code></pre>

<h4>3. Ajax使用FormData上传多个文件</h4>

<p>在 input type=&ldquo;file&rdquo; 里添加 multiple=&ldquo;multiple&rdquo; 属性，选择文件时，按住Ctrl键或Shift键选择多个文件</p>

<pre><code>    &lt;script type="text/javascript"&gt;
    $("#upload").click(function () {
        var formData = new FormData();
        for (var i = 0; i &lt; $('#file')[0].files.length; i++) {
            formData.append('files', $('#file')[0].files[i]);
        }
        $.ajax({
            url: '/Default/UploadFilesByFormData',
            type: 'POST',
            cache: false,
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                alert(data.message)
            }
        }).fail(function (res) {
            alert("系统错误")
        });
    });
    &lt;/script&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pdf预览 jquery.media.js]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/02/26/lang-web-pdf-view/"/>
    <updated>2024-02-26T20:25:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/02/26/lang-web-pdf-view</id>
    <content type="html"><![CDATA[<p><a href="https://huaweicloud.csdn.net/639fed54dacf622b8df90495.html">https://huaweicloud.csdn.net/639fed54dacf622b8df90495.html</a></p>

<pre><code>    &lt;script src="jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;
    &lt;script src="jquery.media.js" type="text/javascript"&gt;&lt;/script&gt;

    &lt;a class='media' href='url/a.pdf'&gt;预览&lt;/a&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[javascript随机打乱数组]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/02/26/lang-web-shuffle/"/>
    <updated>2024-02-26T20:18:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/02/26/lang-web-shuffle</id>
    <content type="html"><![CDATA[<p><a href="https://www.coder.work/article/3779797">https://www.coder.work/article/3779797</a></p>

<pre><code>    const shuffle = ([...array]) =&gt; {
        let i = 0;
        let j = 0;
        let temp = null;

        for (i = array.length - 1; i &gt; 0; i -= 1) {
            j = Math.floor(Math.random() * (i + 1));
            temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
        return array;
    }

    id2nos = shuffle(id2nos);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用jSignature.js实现电子签名]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/11/19/lang-web-jSignature/"/>
    <updated>2023-11-19T18:51:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/11/19/lang-web-jSignature</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_45740068/article/details/129163913">https://blog.csdn.net/weixin_45740068/article/details/129163913</a></p>

<p><a href="https://www.mianshigee.com/project/brinley-jSignature/">https://www.mianshigee.com/project/brinley-jSignature/</a></p>

<p><a href="https://www.erlangyun.com/p?id=164">https://www.erlangyun.com/p?id=164</a></p>

<p><br><br></p>

<script src="http://abcdxyzk.github.io/javascripts/jquery.min.js"></script>


<script src="http://abcdxyzk.github.io/javascripts/jSignature.min.js"></script>




<div class="container">
    <div id="signatureparent">
        <!--画布-->
        <div id="signature"></div>
    </div>
    <br>
    <div class="footer-btn">
        <button type="button" class="btn btn-default btn-block" id="clear">清除</button>
        <button type="button" class="btn btn-primary btn-block" id="save">预览</button>
    </div>
</div>


<p><br><br></p>

<!--预览-->


<div class="autograph">
    <img src="" href="img" style='background:white;' />
</div>


<p><br><br></p>





<script>
    var param= {
        'background-color': 'aliceblue',
        width: '80%',   //签名区域的宽
        height: '50%',  //签名区域的高
        cssclass: 'whitee', //画布的类 可以写自定义的样式
        UndoButton:false,   //撤销按钮的状态 这个按钮的样式修改要去jSignature.js文件中去找
        signatureLine: false,   //去除默认画布上那条横线
        lineWidth: '2'  //画笔的大小
    };
    $("#signature").jSignature(param); //初始化、可设置画板参数

    //清除
    $('#clear').click(function () {
        $("#signature").jSignature("reset");
        $("[href=img]")[0].src = ''
    });

    //保存 
    $('#save').click(function () {
        // 判断是否签名
        if ( $("#signature").jSignature('getData', 'native').length === 0) {
            return alert("请先进行签名");
        }

        // 将签名的画布保存为base64编码字符串 默认是png的
        var datapair = $("#signature").jSignature("getData", "image");
        var i = new Image();
        i.src = "data:" + datapair[0] + "," + datapair[1];
        $("[href=img]")[0].src = i.src
    })
</script>


<pre><code>
    &lt;script src="http://abcdxyzk.github.io/javascripts/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script src="http://abcdxyzk.github.io/javascripts/jSignature.min.js"&gt;&lt;/script&gt;

    &lt;div class="container"&gt;
        &lt;div id="signatureparent"&gt;
            &lt;!--画布--&gt;
            &lt;div id="signature"&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;br&gt;
        &lt;div class="footer-btn"&gt;
            &lt;button type="button" class="btn btn-default btn-block" id="clear"&gt;清除&lt;/button&gt;
            &lt;button type="button" class="btn btn-primary btn-block" id="save"&gt;预览&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;br&gt;&lt;br&gt;
    &lt;!--预览--&gt;
    &lt;div class="autograph"&gt;
        &lt;img src="" href="img" style='background:white;' /&gt;
    &lt;/div&gt;
    &lt;br&gt;&lt;br&gt;

    &lt;style type='text/css'&gt;
    .whitee {
        background-color: 'red';
    }
    &lt;/style&gt;

    &lt;script&gt;
        var param= {
            'background-color': 'aliceblue',
            width: '80%',   //签名区域的宽
            height: '50%',  //签名区域的高
            cssclass: 'whitee', //画布的类 可以写自定义的样式
            UndoButton:false,   //撤销按钮的状态 这个按钮的样式修改要去jSignature.js文件中去找
            signatureLine: false,   //去除默认画布上那条横线
            lineWidth: '2'  //画笔的大小
        };
        $("#signature").jSignature(param); //初始化、可设置画板参数

        //清除
        $('#clear').click(function () {
            $("#signature").jSignature("reset");
            $("[href=img]")[0].src = ''
        });

        //保存 
        $('#save').click(function () {
            // 判断是否签名
            if ( $("#signature").jSignature('getData', 'native').length === 0) {
                return alert("请先进行签名");
            }

            // 将签名的画布保存为base64编码字符串 默认是png的
            var datapair = $("#signature").jSignature("getData", "image");
            var i = new Image();
            i.src = "data:" + datapair[0] + "," + datapair[1];
            $("[href=img]")[0].src = i.src
        })
    &lt;/script&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[动态设置select2]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/10/21/lang-web-select2-set/"/>
    <updated>2023-10-21T21:46:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/10/21/lang-web-select2-set</id>
    <content type="html"><![CDATA[<p><a href="https://select2.org/programmatic-control/add-select-clear-items">https://select2.org/programmatic-control/add-select-clear-items</a></p>

<p><a href="https://blog.csdn.net/qq_38776922/article/details/78849069">https://blog.csdn.net/qq_38776922/article/details/78849069</a></p>

<p><a href="https://blog.csdn.net/u012374381/article/details/72629233">https://blog.csdn.net/u012374381/article/details/72629233</a></p>

<p><a href="https://www.cnblogs.com/makalochen/p/13229472.html">https://www.cnblogs.com/makalochen/p/13229472.html</a></p>

<pre><code>    &lt;script&gt;
    function select_iframe(pre1, pid, pre2, sid, m)
    {
        prr = pid.split(',');
        srr = sid.split(',');
        for (var i = 0; i &lt; prr.length; i ++) {
            var ttype = parent.document.getElementById(pre1+'_'+prr[i]).type;
            if (ttype == 'select-one') {
                var ops = parent.document.getElementById(pre1+'_'+prr[i]).children;
                var html = document.getElementById(pre2+'_'+srr[i]).innerHTML;
                for (oi = 0; oi &lt; ops.length; oi ++) {
                    if (ops[oi].text == html) {
                        // parent.document.getElementById(pre1+'_'+prr[i]).options[oi].selected = true;
                        // ops[oi].selected = true;
                    //  $(parent.document).find('#'+pre1+'_'+prr[i]).val(ops[oi].value).trigger('change');
                        $('#'+pre1+'_'+prr[i], window.parent.document).val(ops[oi].value).trigger('change');
                        var show_id = $('#select2-'+pre1+'_'+prr[i]+"-container", window.parent.document)[0];
                        if (typeof(show_id) != "undefined") {
                            show_id.title = ops[oi].text;
                            show_id.innerText = ops[oi].text;
                        }
                        break;
                    }
                }
            } else if (ttype == 'textarea') {
                parent.document.getElementById(pre1+'_'+prr[i]).innerHTML = document.getElementById(pre2+'_'+srr[i]).innerHTML;
                parent.document.getElementById(pre1+'_'+prr[i]).value = document.getElementById(pre2+'_'+srr[i]).innerHTML;
            } else {
                parent.document.getElementById(pre1+'_'+prr[i]).value = document.getElementById(pre2+'_'+srr[i]).innerHTML;
            }
        }
        if (m == '2') {
            parent.document.getElementById("popup").style.display = "none";
        }
    }
    &lt;/script&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
