<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2025-07-21T17:22:06+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[华为2288H v5服务器配置JBOD（硬盘直通）]]></title>
    <link href="http://abcdxyzk.github.io/blog/2025/07/21/2288H-JBOD/"/>
    <updated>2025-07-21T16:41:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2025/07/21/2288H-JBOD</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/yert_alan/article/details/102560219">https://blog.csdn.net/yert_alan/article/details/102560219</a></p>

<p>对服务器输入“ctrl + alt + delete”，按del键进入BIOS配置界面：</p>

<p>选择Device Manager：</p>

<p>选择阵列卡SAS3508，按enter进入：</p>

<p>选中Main Menu，并回车：</p>

<p>选中Controller Management，并回车：</p>

<p>进入Controller Management，选中Advanced Controller Properties：</p>

<p>进入后下拉，选中到JBOD Mode，按enable，使能JBOD硬盘直通模式：</p>

<p>选择“Apply Changes”并按“Enter”，提示The operation has been performed successfully。</p>

<p>单击“OK”完成配置。</p>

<p>完成上述步骤后，返回到Main Menu，选中Drive Management：</p>

<p>进入Drive Management，可以看到硬盘列表，（硬盘必须是Unconfigured Good，才可以配置JBOD直通模式）：</p>

<p>在使能JBOD模式后，阵列卡会自动将未配置RAID的硬盘设置为JBOD，如果没有，执行下列操作。</p>

<p>选择要配置硬盘直通的硬盘，按回车，进入硬盘详细操作界面：</p>

<p>选择Operation，将“Operation”设置为“Make JBOD”。 选择“Go”并按“Enter”。</p>

<p>进入操作确认界面。</p>

<p>将“Confirm”设置为“Enable”。</p>

<p>选择“Yes”并按“Enter”，显示The operation has been performed successfully。</p>

<p>按“Enter”完成配置并返回上级界面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos 下 TFTP服务器安装]]></title>
    <link href="http://abcdxyzk.github.io/blog/2025/07/21/tftp/"/>
    <updated>2025-07-21T16:03:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2025/07/21/tftp</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/weijie0717/p/8434241.html">https://www.cnblogs.com/weijie0717/p/8434241.html</a></p>

<h2>一、介绍</h2>

<p>TFTP（Trivial File Transfer Protocol,简单文件传输协议）），是一个基于UDP 协议 69端口 实现的用于在客户机和服务器之间进行简单文件传输的协议提供不复杂、开销不大、不复杂的文件传输服务。TFTP 协议专门为小文件传输而设计，只能从服务器上获取文件，或者向服务器写入文件，不能列出目录，也不能进行认证。</p>

<p>TFTP 服务器运行依赖于 xinetd 。</p>

<h2>二、环境</h2>

<p>系统 ：CentOS Linux release 7.4.1708 (Core)</p>

<p>共享路径：/cephfs/sw-conf      文件权限 777</p>

<p>Selinux:  关闭</p>

<h2>三、安装</h2>

<p>1、安装 xinetd 依赖服务：</p>

<pre><code>    # yum install -y xinetd  
</code></pre>

<p>2、安装 Tftp 服务：
<code>
    # yum install -y tftp-server
</code></p>

<p>3、查看：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># rpm -qa | grep xinetd&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# rpm -qa | grep tftp
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>## 四、配置
</span><span class='line'>
</span><span class='line'>1、创建共享文件夹和设置权限：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# mkdir /cephfs/sw-conf
</span><span class='line'>
</span><span class='line'># chmod 777 /cephfs/sw-conf
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>2、配置tftp 服务，/etc/xinetd.d/tftp：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;　　　　# vim /etc/xinetd.d/tftp&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;service tftp
</span><span class='line'>{
</span><span class='line'>    socket_type             = dgram
</span><span class='line'>    protocol                = udp 
</span><span class='line'>    wait                    = yes 
</span><span class='line'>    user                    = root
</span><span class='line'>    server                  = /usr/sbin/in.tftpd
</span><span class='line'>    server_args             = -s /var/lib/tftpboot -c
</span><span class='line'>    disable                 = no
</span><span class='line'>    per_source              = 11
</span><span class='line'>    cps                     = 100 2
</span><span class='line'>    flags                   = IPv4
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>其中 参数 ‘-c ’ , 指定是否可以创建文件。
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>3、重启服务：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# systemctl restart xinetd
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>4、防火墙 放行端口：UDP 69
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# firewall-cmd --permanent --add-port=69/udp
</span><span class='line'>
</span><span class='line'># firewall-cmd --reload
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>
</span><span class='line'>## 五、测试
</span><span class='line'>
</span><span class='line'>在其他linux 设备上安装　tftp-client ：tftp.x86_64　　　　
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;　　　　# yum -y install tftp.x86_64
</span><span class='line'>tftp 1.2.3.4
</span><span class='line'>&gt; put a.log</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gps WGS84与GCJ02经纬度坐标转换 wx.getLocation]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/09/05/gps84-gcj02/"/>
    <updated>2024-09-05T10:33:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/09/05/gps84-gcj02</id>
    <content type="html"><![CDATA[<h4>企业微信 获取地理位置接口</h4>

<p><a href="https://developer.work.weixin.qq.com/document/path/90504">https://developer.work.weixin.qq.com/document/path/90504</a></p>

<h4>经纬度坐标系统</h4>

<p><a href="https://blog.csdn.net/feinifi/article/details/120547127">https://blog.csdn.net/feinifi/article/details/120547127</a></p>

<p><a href="https://blog.csdn.net/weixin_43773218/article/details/132145772">https://blog.csdn.net/weixin_43773218/article/details/132145772</a></p>

<p>地球并不是一个规则的球体，而是一个椭球体。如何对椭球体进行坐标划定，这里有以下几种：</p>

<p><img src="/images/system/20240905-1.png" alt="" /></p>

<p>这里面提到的WGS84，也叫大地坐标系，它是原始坐标系统，为了数据安全和保密，通过地形图非线性保密处理算法（俗称火星加密）加密过的WGS84坐标系，俗称国测局坐标系，或火星坐标系就是我们今天所要提到的GCJ02，目前谷歌地图（中国cn）、腾讯地图、高德地图，使用的都是GCJ02，只有百度地图没有使用这种加密算法，而是使用的是BD09，从名字上可以看出，GCJ02是2002年提出来的算法，BD09则是2009年提出来的，虽然百度地图没有使用GCJ02加密算法，但是他却是在GCJ02基础上做了一个二次加密，所以说，从WGS84坐标系不能直接转BD09，中间需要跨越一个GCJ02，反过来，需要将GCJ02或者BD09转为WGS84就是纠偏算法，相当于逆向解密，同样的DB09直接到不了WGS84，中间还需要转为GCJ02，所以现在的很多算法，如果你看到有百度坐标转大地坐标，基本上需要借助火星坐标来计算。</p>

<p>&hellip;</p>

<h4>WGS84与GCJ02经纬度坐标转换</h4>

<p>js
```
    //地标 转 国测 常量
    var x_PI = (3.14159265358979324 * 3000.0) / 180.0;
    var PI = 3.1415926535897932384626;
    var aaa = 6378245.0; //卫星椭球坐标投影到平面地图坐标系的投影因子。
    var eee = 0.00669342162296594323; //椭球的偏心率。</p>

<pre><code>//判断是否在国内，在中国国内的经纬度才需要做偏移
function out_of_china(lng, lat) {
    return (
        lng &lt; 72.004 ||
        lng &gt; 137.8347 ||
        (lat &lt; 0.8293 || lat &gt; 55.8271 || false)
    );
}

//转化经度
function transformlng(lng, lat) {
    var ret =
        300.0 +
        lng +
        2.0 * lat +
        0.1 * lng * lng +
        0.1 * lng * lat +
        0.1 * Math.sqrt(Math.abs(lng));
    ret +=
        ((20.0 * Math.sin(6.0 * lng * PI) +
            20.0 * Math.sin(2.0 * lng * PI)) *
            2.0) /
        3.0;
    ret +=
        ((20.0 * Math.sin(lng * PI) +
            40.0 * Math.sin((lng / 3.0) * PI)) *
            2.0) /
        3.0;
    ret +=
        ((150.0 * Math.sin((lng / 12.0) * PI) +
            300.0 * Math.sin((lng / 30.0) * PI)) *
            2.0) /
        3.0;
    return ret;
}

//转化纬度
function transformlat(lng, lat) {
    var ret =
        -100.0 +
        2.0 * lng +
        3.0 * lat +
        0.2 * lat * lat +
        0.1 * lng * lat +
        0.2 * Math.sqrt(Math.abs(lng));
    ret +=
        ((20.0 * Math.sin(6.0 * lng * PI) +
            20.0 * Math.sin(2.0 * lng * PI)) *
            2.0) /
        3.0;
    ret +=
        ((20.0 * Math.sin(lat * PI) +
            40.0 * Math.sin((lat / 3.0) * PI)) *
            2.0) /
        3.0;
    ret +=
        ((160.0 * Math.sin((lat / 12.0) * PI) +
            320 * Math.sin((lat * PI) / 30.0)) *
            2.0) /
        3.0;
    return ret;
}

//wgs84 to gcj02   地球坐标系 转 火星坐标系
function wgs84_to_gcj02(lng, lat) {
    if (out_of_china(lng, lat)) {
        return [lng, lat];
    } else {
        var dlat = transformlat(lng - 105.0, lat - 35.0);
        var dlng = transformlng(lng - 105.0, lat - 35.0);
        var radlat = (lat / 180.0) * PI;
        var magic = Math.sin(radlat);
        magic = 1 - eee * magic * magic;
        var sqrtmagic = Math.sqrt(magic);
        dlat =
            (dlat * 180.0) /
            (((aaa * (1 - eee)) / (magic * sqrtmagic)) * PI);
        dlng =
            (dlng * 180.0) / ((aaa / sqrtmagic) * Math.cos(radlat) * PI);
        var mglat = lat + dlat;
        var mglng = lng + dlng;

        return [mglng, mglat];
    }
}

//gcj02 to wgs84  火星坐标系 转 地球坐标系
function gcj02_to_wgs84(lng, lat) {
    if (out_of_china(lng, lat)) {
        return [lng, lat]
    }
    else {
        var dlat = transformlat(lng - 105.0, lat - 35.0);
        var dlng = transformlng(lng - 105.0, lat - 35.0);
        var radlat = lat / 180.0 * PI;
        var magic = Math.sin(radlat);
        magic = 1 - eee * magic * magic;
        var sqrtmagic = Math.sqrt(magic);
        dlat = (dlat * 180.0) / ((aaa * (1 - eee)) / (magic * sqrtmagic) * PI);
        dlng = (dlng * 180.0) / (aaa / sqrtmagic * Math.cos(radlat) * PI);
        mglat = lat + dlat;
        mglng = lng + dlng;
        return [lng * 2 - mglng, lat * 2 - mglat]
    }
}
</code></pre>

<pre><code></code></pre>

<pre><code>// 113.45001722075615, 22.20997597617679
&lt;script&gt; console.log(wgs84_to_gcj02(113.444603, 22.212654)); &lt;/script&gt;;
</code></pre>

<pre><code>

php
</code></pre>

<pre><code>//地标 转 国测 常量
public $x_PI = (3.14159265358979324 * 3000.0) / 180.0;
public $PI = 3.1415926535897932384626;
public $aaa = 6378245.0; //卫星椭球坐标投影到平面地图坐标系的投影因子。
public $eee = 0.00669342162296594323; //椭球的偏心率。


//判断是否在国内，在中国国内的经纬度才需要做偏移
function out_of_china($lng, $lat)
{
    if ($lng &lt; 72.004 || $lng &gt; 137.8347 || $lat &lt; 0.8293 || $lat &gt; 55.8271)
        return true;
    return false;
}

//转化经度
function transformlng($lng, $lat)
{
    $ret =
        300.0 +
        $lng +
        2.0 * $lat +
        0.1 * $lng * $lng +
        0.1 * $lng * $lat +
        0.1 * sqrt(abs($lng));
    $ret +=
        ((20.0 * sin(6.0 * $lng * $this-&gt;PI) +
            20.0 * sin(2.0 * $lng * $this-&gt;PI)) *
            2.0) /
        3.0;
    $ret +=
        ((20.0 * sin($lng * $this-&gt;PI) +
            40.0 * sin(($lng / 3.0) * $this-&gt;PI)) *
            2.0) /
        3.0;
    $ret +=
        ((150.0 * sin(($lng / 12.0) * $this-&gt;PI) +
            300.0 * sin(($lng / 30.0) * $this-&gt;PI)) *
            2.0) /
        3.0;
    return $ret;
}

//转化纬度
function transformlat($lng, $lat)
{
    $ret =
        -100.0 +
        2.0 * $lng +
        3.0 * $lat +
        0.2 * $lat * $lat +
        0.1 * $lng * $lat +
        0.2 * sqrt(abs($lng));
    $ret +=
        ((20.0 * sin(6.0 * $lng * $this-&gt;PI) +
            20.0 * sin(2.0 * $lng * $this-&gt;PI)) *
            2.0) /
        3.0;
    $ret +=
        ((20.0 * sin($lat * $this-&gt;PI) +
            40.0 * sin(($lat / 3.0) * $this-&gt;PI)) *
            2.0) /
        3.0;
    $ret +=
        ((160.0 * sin(($lat / 12.0) * $this-&gt;PI) +
            320 * sin(($lat * $this-&gt;PI) / 30.0)) *
            2.0) /
        3.0;
    return $ret;
}

//wgs84 to gcj02   地球坐标系 转 火星坐标系
function wgs84_to_gcj02($lng, $lat)
{
    if ($this-&gt;out_of_china($lng, $lat)) {
        return [$lng, $lat];
    } else {
        $dlat = $this-&gt;transformlat($lng - 105.0, $lat - 35.0);
        $dlng = $this-&gt;transformlng($lng - 105.0, $lat - 35.0);
        $radlat = ($lat / 180.0) * $this-&gt;PI;
        $magic = sin($radlat);
        $magic = 1 - $this-&gt;eee * $magic * $magic;
        $sqrtmagic = sqrt($magic);
        $dlat = ($dlat * 180.0) / ((($this-&gt;aaa * (1 - $this-&gt;eee)) / ($magic * $sqrtmagic)) * $this-&gt;PI);
        $dlng = ($dlng * 180.0) / (($this-&gt;aaa / $sqrtmagic) * cos($radlat) * $this-&gt;PI);
        $mglat = $lat + $dlat;
        $mglng = $lng + $dlng;

        return [$mglng, $mglat];
    }
}

//gcj02 to wgs84  火星坐标系 转 地球坐标系
function gcj02_to_wgs84($lng, $lat)
{
    if ($this-&gt;out_of_china($lng, $lat)) {
        return [$lng, $lat];
    } else {
        $dlat = $this-&gt;transformlat($lng - 105.0, $lat - 35.0);
        $dlng = $this-&gt;transformlng($lng - 105.0, $lat - 35.0);
        $radlat = $lat / 180.0 * $this-&gt;PI;
        $magic = sin($radlat);
        $magic = 1 - $this-&gt;eee * $magic * $magic;
        $sqrtmagic = sqrt($magic);
        $dlat = ($dlat * 180.0) / (($this-&gt;aaa * (1 - $this-&gt;eee)) / ($magic * $sqrtmagic) * $this-&gt;PI);
        $dlng = ($dlng * 180.0) / ($this-&gt;aaa / $sqrtmagic * cos($radlat) * $this-&gt;PI);
        $mglat = $lat + $dlat;
        $mglng = $lng + $dlng;

        return [$lng * 2 - $mglng, $lat * 2 - $mglat];
    }
}
</code></pre>

<pre><code></code></pre>

<pre><code>// 113.45001722075615, 22.20997597617679
var_dump($this-&gt;wgs84_to_gcj02(113.444603, 22.212654));
</code></pre>

<pre><code>

#### 百度坐标 火星坐标 转换
</code></pre>

<pre><code>/***
 * 百度坐标是在火星坐标基础上做的二次加密
 * @param gg_lat
 * @param gg_lon
 * @return
 */
public static Gps gcj02_To_Bd09(double gg_lat, double gg_lon) {
    double x = gg_lon, y = gg_lat;
    double z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * pi);
    double theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * pi);
    double bd_lon = z * Math.cos(theta) + 0.0065;
    double bd_lat = z * Math.sin(theta) + 0.006;
    return new Gps(bd_lat, bd_lon);
}

/***
 * 百度坐标与火星坐标逆向转换
 * @param bd_lat
 * @param bd_lon
 * @return
 */
public static Gps bd09_To_Gcj02(double bd_lat, double bd_lon) {
    double x = bd_lon - 0.0065, y = bd_lat - 0.006;
    double z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * pi);
    double theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * pi);
    double gg_lon = z * Math.cos(theta);
    double gg_lat = z * Math.sin(theta);
    return new Gps(gg_lat, gg_lon);
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[钉钉API]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/08/29/ding/"/>
    <updated>2024-08-29T14:07:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/08/29/ding</id>
    <content type="html"><![CDATA[<h4>注册</h4>

<p><a href="https://open-dev.dingtalk.com">https://open-dev.dingtalk.com</a></p>

<h4>创建web应用</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/microapplication-creation-and-release-process">https://open.dingtalk.com/document/orgapp/microapplication-creation-and-release-process</a></p>

<p><img src="/images/system/20240829-1.png" alt="" /></p>

<h4>API 下载, 样例</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/how-to-call-apis">https://open.dingtalk.com/document/orgapp/how-to-call-apis</a></p>

<p><a href="https://open.dingtalk.com/document/orgapp/download-the-server-side-sdk?spm=ding_open_doc.document.0.0.a599b17dPaKiMo">https://open.dingtalk.com/document/orgapp/download-the-server-side-sdk?spm=ding_open_doc.document.0.0.a599b17dPaKiMo</a></p>

<pre><code>    include "TopSdk.php";
    // DingTalkConstant::$METHOD_GET 要与下面调用接口url要求的保持一致
    $c = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_GET , DingTalkConstant::$FORMAT_JSON);
    $req = new OapiUserGetRequest();
    $req-&gt;setUserid("userid1");
    $resp = $c-&gt;execute($req, $accessToken,"https://oapi.dingtalk.com/user/get");
    var_dump($resp)
</code></pre>

<pre><code>    // 获取部门列表
    function DepartmentListsub($depid = 1)
    {
        $accessToken = $this-&gt;gettoken();

        $c = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_POST , DingTalkConstant::$FORMAT_JSON);
        $req = new OapiV2DepartmentListsubRequest();
        $req-&gt;setDeptId($depid);
        $req-&gt;setLanguage("zh_CN");
        $resp = $c-&gt;execute($req, $accessToken, "https://oapi.dingtalk.com/topapi/v2/department/listsub");
        var_dump($resp);
    }
</code></pre>

<h4>发送工作通知</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/asynchronous-sending-of-enterprise-session-messages">https://open.dingtalk.com/document/orgapp/asynchronous-sending-of-enterprise-session-messages</a></p>

<h4>点击工作通知跳转到网页应用</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/redirect-micro-applications-to-work-messages">https://open.dingtalk.com/document/orgapp/redirect-micro-applications-to-work-messages</a></p>

<pre><code>    function gettoken()
    {
        $cget = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_GET , DingTalkConstant::$FORMAT_JSON);
        $req = new OapiGettokenRequest();
        $req-&gt;setAppkey($this-&gt;ClientID);
        $req-&gt;setAppsecret($this-&gt;ClientSecret);
        $resp = $cget-&gt;execute($req, '', "https://oapi.dingtalk.com/gettoken");
        // var_dump($resp);
        return $resp-&gt;access_token;
    }
</code></pre>

<pre><code>    // 发送工作通知
    function MessageCorpconversationAsyncsendV2()
    {
        $accessToken = $this-&gt;gettoken();

        $c = new DingTalkClient(DingTalkConstant::$CALL_TYPE_OAPI, DingTalkConstant::$METHOD_POST , DingTalkConstant::$FORMAT_JSON);

        $req = new OapiMessageCorpconversationAsyncsendV2Request();
        $req-&gt;setAgentId($this-&gt;AgentId);
        $req-&gt;setUseridList('045961');
        $req-&gt;setToAllUser(false);

        /*
        $msg = array(
            "msgtype" =&gt; "text",
            "text" =&gt; ["content"=&gt;"12333"],
            );
        */
        /*
        $msg = array(
            "msgtype" =&gt; "link",
            "link" =&gt; [
                "picUrl" =&gt; "https://a.com/g.png",
                "messageUrl" =&gt; "https://a.com/aa",
                "text" =&gt; "text",
                "title" =&gt; "title"
                ]
            );
        */
        $msg = array(
            "msgtype" =&gt; "link",
            "link" =&gt; [
                "picUrl" =&gt; "https://a.com/g.png",
                "messageUrl" =&gt; "dingtalk://dingtalkclient/action/openapp?corpid={$this-&gt;corpId}&amp;container_type=work_platform&amp;app_id=0_{$this-&gt;AgentId}&amp;redirect_type=jump&amp;redirect_url=https://a.com/aaa",
                "text" =&gt; "text",
                "title" =&gt; "title"
                ]
            );
        $req-&gt;setMsg($msg);

        $resp = $c-&gt;execute($req, $accessToken, "https://oapi.dingtalk.com/topapi/message/corpconversation/asyncsend_v2");
        var_dump($resp);
    }
</code></pre>

<h4>批量发送人与机器人会话中机器人消息</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches">https://open.dingtalk.com/document/orgapp/chatbots-send-one-on-one-chat-messages-in-batches</a></p>

<h4>通过免登码获取用户信息</h4>

<p><a href="https://open.dingtalk.com/document/orgapp/obtain-the-userid-of-a-user-by-using-the-log-free">https://open.dingtalk.com/document/orgapp/obtain-the-userid-of-a-user-by-using-the-log-free</a></p>

<p><a href="https://open.dingtalk.com/document/orgapp/jsapi-get-auth-code">https://open.dingtalk.com/document/orgapp/jsapi-get-auth-code</a></p>

<p><a href="https://open.dingtalk.com/document/orgapp/webapp-read-before-development">https://open.dingtalk.com/document/orgapp/webapp-read-before-development</a></p>

<p>只能用js获取code？？？</p>

<p>跳转不太和谐</p>

<pre><code>    function auth($startpage = 0)
    {
        echo "555&lt;br&gt;";
        echo "&lt;div id='cc'&gt;444&lt;/div&gt;";
        echo "&lt;div id='dd'&gt;444&lt;/div&gt;";
        echo '&lt;script src="https://g.alicdn.com/dingding/dingtalk-jsapi/3.0.25/dingtalk.open.js"&gt;&lt;/script&gt;';
        //echo "&lt;script&gt; dd.getAuthCode({ corpId: 'ding07018e',  success: (res) =&gt; { document.getElementById('cc').innerHTML = res.code; }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";
        // echo "&lt;script&gt; dd.replacePage({ url: 'http://www.baidu.com' }); /* dd.closePage(); */ &lt;/script&gt;";
        echo "&lt;script&gt; dd.getAuthCode({ corpId: 'ding07018e',  success: (res) =&gt; { dd.openLink({url: 'https://a.com/ding/getuserinfo?code='+res.code }); dd.closePage(); }, }); document.getElementById('dd').innerHTML = 'ff'; &lt;/script&gt;";

        // 根据 code access_token 获取免密用户信息
        // curl -X POST -d "code=75e121d18" "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token=6c53ee68"

        echo "666&lt;br&gt;";
    }

    // 获取免密用户信息
    function getuserinfo()
    {
        $code = $this-&gt;input-&gt;get('code');

        $accessToken = $this-&gt;gettoken();

        $url = "https://oapi.dingtalk.com/topapi/v2/user/getuserinfo?access_token={$accessToken}";

        $header = array('Content-Type: application/json');
        $fields = array('code' =&gt; $code);
        $postfields = json_encode($fields);
        $res = $this-&gt;Wxapi_model-&gt;queryUrl($url, $header, $postfields);
        $res = json_decode($res, true);
        if (isset($res['errcode']) and $res['errcode'] == 0) {
            echo $res['errmsg'], "&lt;br&gt;&lt;br&gt;";
            var_dump($res['result']['userid']);
            echo "&lt;br&gt;&lt;br&gt;";
            var_dump($res['result']);
            echo "&lt;br&gt;&lt;br&gt;";
        }
        var_dump($res);
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unhide 搜寻隐藏进程, 挖矿病毒处理]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/08/26/unhide/"/>
    <updated>2024-08-26T16:47:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/08/26/unhide</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_48958956/article/details/139812765">https://blog.csdn.net/weixin_48958956/article/details/139812765</a></p>

<p><a href="https://www.cnblogs.com/bonelee/p/16976768.html">https://www.cnblogs.com/bonelee/p/16976768.html</a></p>

<p>cpu us 达到 100%</p>

<p>top ps 命令无法发现进程</p>

<h4>进程如何隐藏</h4>

<p>Linux系统中有一个特殊的目录：/proc/，这个目录下的内容，不是硬盘上的文件系统，而是操作系统内核暴露出的内核中进程、线程相关的数据接口，也就是procfs，里面记录了系统上正在运行的进程和线程信息</p>

<p>而ps、top等命令的工作原理，实质上就是遍历这个目录。</p>

<p>知道了原理，想实现隐藏就有以下几个思路：</p>

<h5>命令替换</h5>

<p>直接替换系统中的ps、top命令工具。可以从GitHub上下载它们的源码，加入对应的过滤逻辑，在遍历进程的时候，剔除挖矿进程，实现隐藏的目的。</p>

<h5>模块注入</h5>

<p>编写一个动态链接库so文件，在so中，HOOK遍历相关的函数（readdir/readdir64），遍历的时候，过滤挖矿进程。</p>

<p>通过修改LD_PRELOAD环境变量或/etc/ld.so.preload文件，配置动态链接库，实现将其注入到目标进程中。</p>

<h5>内核级隐藏</h5>

<p>模块注入的方式是在应用层执行函数HOOK，隐藏挖矿进程，更进一步，可以通过加载驱动程序的方式在内核空间HOOK相应的系统调用来实现隐藏。不过这对攻击者的技术要求也更高，遇到这样的病毒清理起来挑战也更大了。</p>

<h4>揪出挖矿进程</h4>

<p>通过上面的进程隐藏原理看得住来，都是想尽办法隐藏/proc目录下的内容，类似于“障眼法”，所以包含ps、top、ls等等在内的命令，都没办法看到挖矿进程的存在。</p>

<p>但蒙上眼不代表不存在，有一个叫unhide的工具，就能用来查看隐藏进程。</p>

<pre><code>    unhide proc
</code></pre>

<h4>systemctl status pid</h4>

<pre><code>    [root@localhost ~]# systemctl status 77206
    ● 800a7a3e.service - Server Service
        Loaded: loaded (/usr/lib/systemd/system/800a7a3e.service; disabled; vendor preset: disabled)
       Active: activating (auto-restart) since Tue 2024-08-27 09:00:26 CST; 14min ago
      Process: 47625 ExecStart=/usr/bin/800a7a3e0df6442b 800a7a3e (code=exited, status=0/SUCCESS)
     Main PID: 47625 (code=exited, status=0/SUCCESS)
        Tasks: 22
       Memory: 19.4M
       CGroup: /system.slice/800a7a3e.service
               └─77206 /945d4139

    systemctl stop xx.service
    systemctl disable xx.service
</code></pre>

<h4>/etc/rc.local被修改, lsattr被修改</h4>

<p>先重装 e2fsprogs , 让 lsattr, chattr 可用
<code>
    yum reinstall e2fsprogs
</code></p>

<pre><code>    lsattr /etc/rc.local

    chattr -i /etc/rc.local

    chattr -a /etc/rc.local
</code></pre>

<h4>unhide log</h4>

<pre><code>    [root@localhost ~]# time unhide proc
    Unhide 20130526
    Copyright © 2013 Yago Jesus &amp; Patrick Gouin
    License GPLv3+ : GNU GPL version 3 or later
    http://www.unhide-forensics.info

    NOTE : This version of unhide is for systems using Linux &gt;= 2.6

    Used options:
    [*]Searching for Hidden processes through /proc stat scanning

    Found HIDDEN PID: 77206
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77207
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77208
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77209
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77210
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77211
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77345
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77346
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77347
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77348
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77349
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77350
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77351
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77352
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77353
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77354
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77355
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77356
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77357
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77358
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77359
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/

    Found HIDDEN PID: 77360
            Cmdline: "/945d4139"
            Executable: "/945d4139 (deleted)"
            Command: "945d4139"
            $USER=root
            $PWD=/


    real    25m58.149s
    user    4m55.258s
    sys     20m31.360s
</code></pre>
]]></content>
  </entry>
  
</feed>
