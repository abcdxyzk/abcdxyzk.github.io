<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system~centos | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system~centos/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-05-16T17:25:48+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CentOS8 编译内核错误]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/05/16/centos8-kernel/"/>
    <updated>2024-05-16T17:12:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/05/16/centos8-kernel</id>
    <content type="html"><![CDATA[<p><a href="https://koji.mbox.centos.org/koji/buildinfo?buildID=20542">https://koji.mbox.centos.org/koji/buildinfo?buildID=20542</a></p>

<p><a href="https://zhuanlan.zhihu.com/p/535853460">https://zhuanlan.zhihu.com/p/535853460</a></p>

<h4>1. fatal error: openssl/opensslv.h: No such file or directory</h4>

<p>fatal error: openssl/bio.h: No such file or directory</p>

<pre><code>    A：缺少包，直接yum -y install openssl-devel即可（apt-get install libssl-dev）
</code></pre>

<h4>2. 其余类似的报错，缺少文件可依次安装：</h4>

<pre><code>    A：yum -y install flex, bison, openssl-devel, elfutils-libelf-devel
</code></pre>

<h4>3.</h4>

<pre><code>    make[1]: *** No rule to make target 'certs/rhel.pem', needed by 'certs/x509_certificate_list'. Stop.
    make: *** [Makefile:1729: certs] Error 2

    A： =&gt; 打开 .config，注释掉这两行

    CONFIG_MODULE_SIG_KEY=""

    CONFIG_SYSTEM_TRUSTED_KEYS=""
</code></pre>

<h4>4.</h4>

<pre><code>    BTF: .tmp_vmlinux.btf: pahole (pahole) is not available

    Failed to generate BTF for vmlinux
    Try to disable CONFIG_DEBUG_INFO_BTF
    make: *** [Makefile:1113: vmlinux] Error 1

    A： =&gt; 修改CONFIG_DEBUG_INFO_BTF=n
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS8.5 安装]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/05/11/centos8.5-install/"/>
    <updated>2024-05-11T14:19:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/05/11/centos8.5-install</id>
    <content type="html"><![CDATA[<h4>dracut-initqueue timeout错误</h4>

<p>USB3.0 的U盘可能识别不了，可能需要USB2.0的U盘</p>

<h4>dracut-initqueue timeout错误</h4>

<pre><code>    dracut:/# ls -l /dev/disk/by-label/

    lrwxrwxrwx 1 root root 11 May 24 14:25 CentOS-8-5- -&gt; ../../sdd4
</code></pre>

<p>重启，按e，修改启动参数</p>

<p>将 hd:LABEL=CentOS-8-5-2111-x86_64-dvd 改成上面显示的 hd:LABEL=CentOS-8-5-</p>

<h4>installation source</h4>

<p>需要将ISO放到另一个U盘或者硬盘，可以将硬盘尾部格出一块来放</p>

<h4>efi</h4>

<p>可能需要efi模式，但efi模式好像没法用grub2-install。</p>

<p>目前用另一块盘的centos7 : grub2-mkconfig -o /boot/grub2/grub.cfg 来启动centos8</p>

<hr />

<p><a href="https://www.cnblogs.com/shaoyishi/p/17270213.html">https://www.cnblogs.com/shaoyishi/p/17270213.html</a></p>

<h4>yum</h4>

<pre><code>    Error: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist
</code></pre>

<ol>
<li><p>首先，进入到 yum 的 repos 目录
<code>
 cd /etc/yum.repos.d/
</code></p></li>
<li><p>其次，修改 centos 文件内容
<code>
 sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
 sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
</code></p></li>
<li><p>然后，生成缓存更新
<code>
 yum makecache
</code></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 多IP配置]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/30/centos-ips/"/>
    <updated>2023-01-30T11:40:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/30/centos-ips</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/dachenyi/p/15980164.html">https://www.cnblogs.com/dachenyi/p/15980164.html</a></p>

<p><a href="https://www.cnblogs.com/jiftle/p/16692400.html">https://www.cnblogs.com/jiftle/p/16692400.html</a></p>

<h4>关闭 rp_filter 校验</h4>

<p>在 /etc/sysctl.conf 或 /usr/lib/sysctl.d/50-default.conf 中关闭反向过滤</p>

<p>反向过滤指系统在接收到一个 IP 包后检查该 IP 是否符合要求，不合要求则被丢弃。</p>

<p>例如：用户在 A 网卡上收到一个 IP 包，发送 IP 为 B。而给 B 的 IP 发送时用的网卡不是 A，则会丢弃。由于默认路由走的是主网卡，所以开启反向过滤后，辅助网卡上的 IP 会 ping 不通。</p>

<p>net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.all.rp_filter = 0</p>

<h4>cfg</h4>

<p>cd /etc/sysconfig/network-scripts/</p>

<p>vim ifcfg-eth0</p>

<pre><code>    IPADDR0=172.27.0.10
    IPADDR1=172.27.0.11
    PREFIX=24
    GATEWAY0=172.27.0.1
    GATEWAY1=172.27.0.1

    DEFROUTE=yes        # 双网卡都配网关
    IPV4_ROUTE_METRIC=10    # 0-100 数字越小优先级越高，但是默认网关只能有一个，相当于主备网关, 只有当主网关断掉了，备用网关才会生效
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS的pcspkr模块, 报警声]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/10/01/centos-bill/"/>
    <updated>2022-10-01T21:50:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/10/01/centos-bill</id>
    <content type="html"><![CDATA[<p><a href="http://code.js-code.com/centos/120705.html">http://code.js-code.com/centos/120705.html</a></p>

<h4>加载pcspkr模块打开beep</h4>

<pre><code>    [root@localhost~]# modprobe pcspkr
    [root@localhost~]# lsmod | grep pcspkr
    pcspkr  20000
</code></pre>

<h4>卸载pcspkr模块关闭beep</h4>

<pre><code>    [root@localhost~]# rmmod pcspkr
</code></pre>

<h4>永久禁止加载pcspkr模块</h4>

<pre><code>    [root@localhost~]# vim /etc/modprobe.d/blacklist.conf
    blacklist pcspkr


    [root@localhost~]# vim /etc/rc.local
    /sbin/rmmod pcspkr
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 1G以内内存调优]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/08/20/centos-setting/"/>
    <updated>2022-08-20T16:18:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/08/20/centos-setting</id>
    <content type="html"><![CDATA[<pre><code>    echo 1 &gt; /proc/sys/kernel/softlockup_panic

    echo 0 &gt; /proc/sys/net/mptcp/mptcp_enabled
    echo 0 &gt; /proc/sys/net/ipv4/tcp_timestamps
    echo 0 &gt;  /proc/sys/net/ipv4/tcp_max_tw_buckets
    echo "4096 16384 256000" &gt; /proc/sys/net/ipv4/tcp_wmem
    echo "4096 16384 256000" &gt; /proc/sys/net/ipv4/tcp_rmem
    echo 6 &gt; /proc/sys/net/ipv4/tcp_retries2
    echo 0 &gt; /proc/sys/net/ipv4/tcp_syncookies
    # echo 128 &gt; /proc/sys/net/ipv4/tcp_max_syn_backlog

    echo 99 &gt; /proc/sys/vm/swappiness
    service irqbalance stop

    #rm -rf /usr/local/share/aliyun-assist/
</code></pre>
]]></content>
  </entry>
  
</feed>
