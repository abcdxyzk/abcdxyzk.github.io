<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system~fs | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system~fs/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-07-31T15:24:28+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LVM 输出更多信息]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/07/31/lvm-attr/"/>
    <updated>2024-07-31T15:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/07/31/lvm-attr</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/useradd/p/10005211.html">https://www.cnblogs.com/useradd/p/10005211.html</a></p>

<p>显示LVM信息常用 pvs,lvs,vgs 命令，如果想显示详细信息可以使用 pvdisplay ,vgdisplay ,lvdisplay，其中前面命令仅用于简单输出 lvm 对象相关信息，可以格式化输出；第二种命令会详细显示 lvm 对像信息，但不易于格式化输出。</p>

<pre><code>    pvs # 显示物理卷(pv)信息
    vgs # 显示逻辑卷组(vg)信息
    lvs # 显示逻辑卷(lv)信息
</code></pre>

<h4>显示额外信息</h4>

<pre><code>    pvs -v
    vgs -v
    lvs -v
</code></pre>

<h4>只显示 pv_name,dev_size 字段</h4>

<pre><code>    [root@redhat6 lvm]# pvs -o pv_name,dev_size
      PV         DevSize
      /dev/sda2   14.51g
      /dev/sdb     4.00g
</code></pre>

<p>增加 -o 参数，指定需要输出的字段。</p>

<h4>在pvs 默认输出上，增加字段</h4>

<pre><code>    [root@redhat6 lvm]# pvs -o +pv_uuid
      PV         VG         Fmt  Attr PSize  PFree PV UUID                              
      /dev/sda2  vg_redhat6 lvm2 a--  14.51g    0  dpTW84-DHRy-PIA9-u1tY-YUH4-XQKw-8Hy2Zm
      /dev/sdb   vg_redhat6 lvm2 a--   4.00g 2.81g YKIQwX-zc6H-TZ65-P3qr-sRfk-LX0p-T18vdG
</code></pre>

<p>如果想在默认输出的前提下增加字段，可以使用 -o + 字段名。</p>

<h4>vgs 显示卷组成员</h4>

<pre><code>    [root@redhat6 lvm]# vgs -o +lv_name
      VG         #PV #LV #SN Attr   VSize  VFree LV
      vg_redhat6   2   3   0 wz--n- 18.50g 2.81g lv_root
      vg_redhat6   2   3   0 wz--n- 18.50g 2.81g lv_swap
      vg_redhat6   2   3   0 wz--n- 18.50g 2.81g lv_pgdata_01
</code></pre>

<h2>字段排序</h2>

<h4>根据 lv_size 字段排序</h4>

<pre><code>    [root@redhat6 lvm]# lvs -O lv_size
      LV           VG         Attr   LSize   Origin Snap%  Move Log Copy%  Convert
      lv_pgdata_01 vg_redhat6 -wi-ao 700.00m
      lv_swap      vg_redhat6 -wi-ao   1.91g
      lv_root      vg_redhat6 -wi-ao  13.10g
</code></pre>

<p>如果想根据输出字段排序，可以使用 -O 字段名 选项。</p>

<h2>附 lvs,vgs,pvs 字段</h2>

<h4>4.1 lvs 字段</h4>

<pre><code>    lv_all               - All fields in this section.
    lv_uuid              - Unique identifier.
    lv_name              - Name.  LVs created for internal use are enclosed in brackets.
    lv_path              - Full pathname for LV.
    lv_attr              - Various attributes - see man page.
    lv_major             - Persistent major number or -1 if not persistent.
    lv_minor             - Persistent minor number or -1 if not persistent.
    lv_read_ahead        - Read ahead setting in current units.
    lv_kernel_major      - Currently assigned major number or -1 if LV is not active.
    lv_kernel_minor      - Currently assigned minor number or -1 if LV is not active.
    lv_kernel_read_ahead - Currently-in-use read ahead setting in current units.
    lv_size              - Size of LV in current units.
    seg_count            - Number of segments in LV.
    origin               - For snapshots, the origin device of this LV.
    origin_size          - For snapshots, the size of the origin device of this LV.
    snap_percent         - For snapshots, the percentage full if LV is active.
    copy_percent         - For mirrors and pvmove, current percentage in-sync.
    move_pv              - For pvmove, Source PV of temporary LV created by pvmove.
    convert_lv           - For lvconvert, Name of temporary LV created by lvconvert.
    lv_tags              - Tags, if any.
    mirror_log           - For mirrors, the LV holding the synchronisation log.
    modules              - Kernel device-mapper modules required for this LV.
</code></pre>

<h4>4.2 pvs 字段</h4>

<pre><code>    pv_all               - All fields in this section.
    pe_start             - Offset to the start of data on the underlying device.
    pv_size              - Size of PV in current units.
    pv_free              - Total amount of unallocated space in current units.
    pv_used              - Total amount of allocated space in current units.
    pv_attr              - Various attributes - see man page.
    pv_pe_count          - Total number of Physical Extents.
    pv_pe_alloc_count    - Total number of allocated Physical Extents.
    pv_tags              - Tags, if any.
    pv_mda_count         - Number of metadata areas on this device.
    pv_mda_used_count    - Number of metadata areas in use on this device.
</code></pre>

<h4>4.3 vgs 字段</h4>

<pre><code>    vg_all               - All fields in this section.
    vg_fmt               - Type of metadata.
    vg_uuid              - Unique identifier.
    vg_name              - Name.
    vg_attr              - Various attributes - see man page.
    vg_size              - Total size of VG in current units.
    vg_free              - Total amount of free space in current units.
    vg_sysid             - System ID indicating when and where it was created.
    vg_extent_size       - Size of Physical Extents in current units.
    vg_extent_count      - Total number of Physical Extents.
    vg_free_count        - Total number of unallocated Physical Extents.
    max_lv               - Maximum number of LVs allowed in VG or 0 if unlimited.
    max_pv               - Maximum number of PVs allowed in VG or 0 if unlimited.
    pv_count             - Number of PVs.
    lv_count             - Number of LVs.
    snap_count           - Number of snapshots.
    vg_seqno             - Revision number of internal metadata.  Incremented whenever it changes.
    vg_tags              - Tags, if any.
    vg_mda_count         - Number of metadata areas on this VG.
    vg_mda_used_count    - Number of metadata areas in use on this VG.
    vg_mda_free          - Free metadata area space for this VG in current units.
    vg_mda_size          - Size of smallest metadata area for this VG in current units.
    vg_mda_copies        - Target number of in use metadata areas in the VG.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LVM 缩减 VG 大小 ( pvmove )]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/07/31/lvm-pvmove/"/>
    <updated>2024-07-31T15:09:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/07/31/lvm-pvmove</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/useradd/p/10005212.html">https://www.cnblogs.com/useradd/p/10005212.html</a></p>

<p>pvmove 命令用来将一块盘上的数据移到另一块盘，可以移动整块盘的数据，也可以移动指定 extent 范围的数据， 接下来演示 pvmove 的一个例子，下面这个例子的 VG 由三个 PV 组成，我们想将其中一个 PV 的数据移动其它 PV中，空闲的PV 可以用来创建新的 VG。</p>

<h4>1 显示 pv 使用信息</h4>

<pre><code>     [root@redhat6 ~]# pvs -o+pv_used
      PV         VG         Fmt  Attr PSize  PFree Used  
      /dev/sda2  vg_redhat6 lvm2 a--  14.51g    0   14.51g
      /dev/sdb   vg_redhat6 lvm2 a--   4.00g 2.62g   1.38g
      /dev/sdc   vg_redhat6 lvm2 a--   6.00g 5.60g 404.00m
</code></pre>

<p>从上面看出，有三块 pv</p>

<h4>2 移动 /dev/sdb 数据到 /dev/sdc 盘上</h4>

<pre><code>    [root@redhat6 ~]# pvmove /dev/sdb /dev/sdc
      /dev/sdb: Moved: 0.8%
      /dev/sdb: Moved: 28.3%
      /dev/sdb: Moved: 42.5%
      /dev/sdb: Moved: 57.2%
      /dev/sdb: Moved: 72.8%
      /dev/sdb: Moved: 92.6%
      /dev/sdb: Moved: 100.0%
</code></pre>

<p>上述命令将 /dev/sdb 文件移动 /dev/sdc 上。</p>

<h4>3 再次查看 pv 信息</h4>

<pre><code>    [root@redhat6 ~]# pvs -o+pv_used
      PV         VG         Fmt  Attr PSize  PFree Used 
      /dev/sda2  vg_redhat6 lvm2 a--  14.51g    0  14.51g
      /dev/sdb   vg_redhat6 lvm2 a--   4.00g 4.00g     0
      /dev/sdc   vg_redhat6 lvm2 a--   6.00g 4.22g  1.77g
</code></pre>

<p>从上面看出 /dev/sdb 盘使用空间为 0，说明空间被腾出。</p>

<h4>4 将 /dev/sdb 从 VG vg_redhat6 中移出</h4>

<pre><code>    [root@redhat6 ~]# vgreduce /dev/vg_redhat6 /dev/sdb 
      Removed "/dev/sdb" from volume group "vg_redhat6" 

    [root@redhat6 ~]# pvs
      PV         VG         Fmt  Attr PSize  PFree
      /dev/sda2  vg_redhat6 lvm2 a--  14.51g    0
      /dev/sdb              lvm2 a--   4.00g 4.00g
      /dev/sdc   vg_redhat6 lvm2 a--   6.00g 4.22g 
</code></pre>

<p>根据pvs 信息， /dev/sdb 已经不是 VG  vg_redhat6 的成员了。 那么 /dev/sdb 盘可以移除，或者它用。</p>

<h4>5 在 /dev/sdb 上创建新的 VG</h4>

<pre><code>    [root@redhat6 ~]# vgcreate vg_pgroot  /dev/sdb
      Volume group "vg_pgroot" successfully created
    [root@redhat6 ~]# vgs
      VG         #PV #LV #SN Attr   VSize  VFree
      vg_pgroot    1   0   0 wz--n-  4.00g 4.00g
      vg_redhat6   2   4   0 wz--n- 20.50g 4.22g
</code></pre>

<h4>6 再次查看 PV  /dev/sdb 信息</h4>

<pre><code>    [root@redhat6 ~]# pvs
      PV         VG         Fmt  Attr PSize  PFree
      /dev/sda2  vg_redhat6 lvm2 a--  14.51g    0
      /dev/sdb   vg_pgroot  lvm2 a--   4.00g 4.00g
      /dev/sdc   vg_redhat6 lvm2 a--   6.00g 4.22g
</code></pre>

<p>/dev/sdb 已经是 VG vg_pgroot 的成员了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[查看raid信息]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/02/01/raid/"/>
    <updated>2023-02-01T14:57:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/02/01/raid</id>
    <content type="html"><![CDATA[<p><a href="https://www.bbsmax.com/A/n2d9y8r0dD/">https://www.bbsmax.com/A/n2d9y8r0dD/</a></p>

<p>wmic csproduct get name    查看服务器型号</p>

<p>wmic bios get serialnumber 查看序列号</p>

<hr />

<p><a href="https://blog.csdn.net/suankuang/article/details/106242025">https://blog.csdn.net/suankuang/article/details/106242025</a></p>

<p><a href="https://www.51sjk.com/b19b157342/">https://www.51sjk.com/b19b157342/</a></p>

<p><a href="https://blog.csdn.net/wojiuwangla/article/details/113940417">https://blog.csdn.net/wojiuwangla/article/details/113940417</a></p>

<p><a href="https://www.bbsmax.com/A/KE5QYRo45L/">https://www.bbsmax.com/A/KE5QYRo45L/</a></p>

<p><a href="https://it.cha138.com/shida/show-5212.html">https://it.cha138.com/shida/show-5212.html</a></p>

<h2>linux 查看信息</h2>

<h4>软件raid，禁用</h4>

<pre><code>    cat /proc/mdstat
</code></pre>

<h4>硬件raid</h4>

<p>查看硬件是否支持RAID
<code>
    lspci | grep -i RAID
    lspci | grep -i smart
</code></p>

<p>查看系统是否配置RAID
<code>
    dmesg | grep -i raid
    dmesg | grep -i smart
</code></p>

<p>如上所示，在系统日志中可以看到存在RAID设备，以及设备型号等信息。或者通过以下命令查看:
<code>
    cat /proc/scsi/scsi
</code></p>

<h4>确认RAID卡型号</h4>

<pre><code>    lspci -v -s $(lspci | grep -i raid | awk '{print $1}')

    lspci | grep -i smart
</code></pre>

<p>从上述返回信息得到RAID卡型号：Subsystem: xxx</p>

<h2>根据型号查看服务器RAID磁盘详情</h2>

<h3>HP</h3>

<h4>linux</h4>

<p><a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/ssacli-4.21-7.0.x86_64.rpm">ssacli-4.21-7.0.x86_64.rpm</a></p>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_521fc533ba8f468f9ad9db20e4">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_521fc533ba8f468f9ad9db20e4</a></p>

<pre><code>    rpm -ivh ssacli-4.21-7.0.x86_64.rpm

    ssacli ctrl all show config
    ssacli ctrl all show config detail
</code></pre>

<p><a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/hpacucli-9.40-12.0.x86_64.rpm">hpacucli-9.40-12.0.x86_64.rpm</a></p>

<p><a href="https://mirror.nforce.com/pub/software/raidtools/">https://mirror.nforce.com/pub/software/raidtools/</a></p>

<pre><code>    rpm -ivh hpacucli-9.40-12.0.x86_64.rpm

    hpacucli ctrl all show config
    hpacucli ctrl all show config detail
</code></pre>

<h4>win</h4>

<h5>Smart Array P410i</h5>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_33fe6fcf4fcb4beab8fee4d2dc">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_33fe6fcf4fcb4beab8fee4d2dc</a></p>

<p><a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/HP%20ProLiant%20Array%20Configuration%20Utility%20CLI%20for%20Windows%2064-bit%209.40.12.0.exe">HP ProLiant Array Configuration Utility CLI for Windows 64-bit 9.40.12.0.exe</a></p>

<pre><code>    C:\Documents and Settings&gt;"c:\Program Files\Compaq\Hpacucli\Bin\hpacucli.exe" ctrl all show config
</code></pre>

<p>或者用图形界面 HP Array Configuration Utility 8.70.9.exe</p>

<h5>Smart Array P830i</h5>

<p>如果系统自带了 Smart Storage Administrator CLI 则：</p>

<pre><code>    C:\Windows\system32&gt;"c:\Program Files\HP\hpssacli\bin\hpssacli.exe" ctrl all show config
</code></pre>

<p>不然只能用图形界面 Smart Storage Administrator</p>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_f9eb4d247d3b4488b87976b33d">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_f9eb4d247d3b4488b87976b33d</a></p>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_891c6d6803044e5db3e0c2a5ab">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_891c6d6803044e5db3e0c2a5ab</a></p>

<p>HPE Smart Storage Administrator 2.40.13.0.exe</p>

<p>HPE Smart Storage Administrator 3.40.3.0.exe</p>

<p>HPE Smart Storage Administrator 4.21.7.0.exe</p>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_1d00dad72f544c5db131a7a5e4">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_1d00dad72f544c5db131a7a5e4</a></p>

<p>HPE Smart Storage Administrator CLI for Windows 64-bit 4.21.7.0.exe 装不上。。。</p>

<h5>离线 HPE 智能存储管理员（HPE SSA）</h5>

<p>www.ylys.net/post/946.html</p>

<p><a href="https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_321a88714bff4279abf175b9bd">https://support.hpe.com/connect/s/softwaredetails?language=zh_CN&amp;softwareId=MTX_321a88714bff4279abf175b9bd</a></p>

<p>离线 HPE 智能存储管理员（Offline Array Configuration，HPE SSA）提供可以安装、刻录到 CD/DVD，或者使用面向 Windows 的 HP USB Key 实用程序存储到 USB 闪存盘或 SD 卡的 ISO 镜像。此可交付的内容允许用户在主机操作系统加载前启动到他们可以选择多种配置实用程序（HPE SSA、HPESSACLI 和 HPESSASCRIPTING）的环境。HPE 智能存储管理员（HPE SSA）可帮助您配置、管理、诊断和监控 HP ProLiant 智能阵列管理器，且现在还可支持其他存储设备，如 主机总线适配器（HBAs）、HP 存储控制器，未来还可支持 SCSI Express 驱动器以及 SAS 交换机设备。HPE SSA 更新了 HP 阵列配置实用程序或 ACU 的设计，并可在上线时为多种智能存储计划提供新的特性和功能。HPE SSA 可让您像以前一样配置和管理存储，但是现在配备了更多特性、功能和支持设备。现有 ACU 脚本只需进行较少的变更（如按照顺序调用相应二进制或可执行命令）便可维持兼容性。</p>

<h3>Inspur 等 Broadcom / LSI MegaRAID SAS 9361-8i</h3>

<p><a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/megaraid-utils-1.8-2.el7.x86_64.rpm">megaraid-utils-1.8-2.el7.x86_64.rpm</a></p>

<p><a href="https://repo.aerisnetwork.com/stable/centos/7/x86_64/megaraid-utils-1.8-2.el7.x86_64.rpm">https://repo.aerisnetwork.com/stable/centos/7/x86_64/megaraid-utils-1.8-2.el7.x86_64.rpm</a></p>

<p>ln -s /opt/megaraid/megacli /usr/bin/MegaCli</p>

<h4>查看raid 状态</h4>

<pre><code>    MegaCli64 -LdInfo -lAll -aALL

    State               : Degraded（降级）
    State               : Offline（离线）
    State               : Optimal（正常）
    Number Of Drives    : 2  RAID组包含2块磁盘。
</code></pre>

<h4>查看硬盘所有信息</h4>

<pre><code>    /opt/megaraid/megacli -PDList -aALL

    Slot Number:              ---硬盘槽号
    PD Type:                  -----磁盘接口类型
    InquiryData:              -----硬盘的序列号、型号、固件版本
    Raw Size:                 -----磁盘原始大小
    NonCoerced Size:          -----磁盘标准大小
    CoercedSize:              ------磁盘最大可用大小
    Medai Error Count:        ------表示磁盘可能错误，可能是磁盘有坏道，这个值不为0值得注意，数值越大，危险系数越高。
    Other Error Count:        ------表示磁盘可能存在松动，可能需要重新再插入。
    Predictive Failure Count: -----预测故障计数
</code></pre>

<h4>查看硬盘数量以及有无损坏</h4>

<pre><code>    /opt/megaraid/megacli -PDList -aALL

    Firmware state: Online, Spun Up 磁盘正常
    Firmware state: Unconfigured(good), Spun Up 磁盘已安装，但未启用
    Firmware state: Unconfigured(bad) 故障
    Firmware state: Failed 故障
    Firmware state: Rebuild 重建，一般在更换磁盘时显示
</code></pre>

<h4>查看raid级别, 由哪些硬盘组成的</h4>

<pre><code>    /opt/megaraid/megacli -LdPdInfo -aALL

    raid级别:
        RAIDLevel : Primary-0, Secondary-0, RAID Level Qualifier-0     这就是raid0           
        0 0 0 是raid0    
        1 0 0 是raid1  
        5 0 3 是raid5  
        1 3 0 是raid10
        raid1 还需要结合Span Depth的值来判断
        Span Depth : 2 表示共2个RAID1盘组做成了RAID10，1表示1个RAID1盘组
        还有一种情况：Primary-1， Secondary-3， RAID LevelQualifier-0 也是表示 RAID-10;

    也可以这么显示raid级别，输入就会返回，这种的基本准确

    MegaCli64 -ShowSummary -aALL | grep "RAID Level"
</code></pre>

<h4>win</h4>

<p><a href="https://www.intel.com/content/www/us/en/download/19041/intel-raid-web-console-3-rwc3-for-windows.html">https://www.intel.com/content/www/us/en/download/19041/intel-raid-web-console-3-rwc3-for-windows.html</a></p>

<p>storcli <a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/Intel_StorCLI_007.1907.0000.0000.zip">Intel_StorCLI_007.1907.0000.0000.zip</a></p>

<p>MegaCli <a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/Win_CliKL_8.04.07.zip">Win_CliKL_8.04.07.zip</a></p>

<p><a href="https://www.cnblogs.com/luxiaodai/p/9878747.html">https://www.cnblogs.com/luxiaodai/p/9878747.html</a></p>

<p><a href="https://www.dianjilingqu.com/187111.html">https://www.dianjilingqu.com/187111.html</a></p>

<p>MegaCli 是LSI公司官方提供的SCSI卡管理工具，由于LSI被收购变成了现在的Broadcom，所以现在想下载MegaCli，需要去Broadcom官网查找Legacy产品支持，</p>

<p>现在官方有storcli，storcli已经基本代替了megacli，整合了LSI和3ware所有产品。</p>

<pre><code>    storcli64 show [all]  显示raid卡相关信息、raid卡高级软件信息

    storcli64 /c0 show    显示控制器0的信息
</code></pre>

<h3>Adaptec</h3>

<p><a href="https://storage.microsemi.com/en-us/support/raid/sas_raid/asr-8805/">https://storage.microsemi.com/en-us/support/raid/sas_raid/asr-8805/</a></p>

<p><a href="https://www.cnblogs.com/my-show-time/p/14701882.html">https://www.cnblogs.com/my-show-time/p/14701882.html</a></p>

<p>linux <a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/Arcconf-3.07-23850.x86_64.rpm">Arcconf-3.07-23850.x86_64.rpm</a></p>

<p>window <a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/arcconf_v3_07_23850_win.zip">arcconf_v3_07_23850_win.zip</a></p>

<h4>arcconf</h4>

<pre><code>    arcconf LIST                #查询整列卡信息
    arcconf GETCONFIG 1 AD      # 查询 Controller #1 的适配器信息
    arcconf GETCONFIG 1 LD      # 查询 Controller #1 的逻辑设备信息
    arcconf GETCONFIG 1 PD      # 查询 Controller #1 的物理设备信息
    arcconf GETCONFIG 1 AR      # 查询 Controller #1 的阵列信息
    arcconf GETCONFIG 1 AL      # 查询 Controller #1 的所有信息
    arcconf GETCONFIG 1 LD|grep 'Logical Device number'     # 查询 Controller #1 的所有逻辑设备编号
    arcconf GETCONFIG 1 LD|grep 'Logical Device name'       # 查询 Controller #1 的所有逻辑设备名称
    arcconf GETCONFIG 1 PD|grep 'Device #'                  # 查询 Controller #1 的所有物理设备编号
    arcconf GETCONFIG 1 LD|grep -E 'Logical Device number|Device:|Slot:'                # 查询 Controller #1 的所有逻辑设备对应的物理设备
    arcconf GETCONFIG 1 LD|grep -E 'Logical Device number|Device:|Slot:'                # 查询 Controller #1 的所有逻辑设备对应的物理设备
    arcconf GETCONFIG 1 LD|grep -E 'Logical Device number|RAID level|Device:|Slot:'     # 查询 Controller #1 的所有逻辑设备的RAID level以及物理设备
    arcconf GETCONFIG 1 LD|grep -E 'Logical Device number|Logical Device name|RAID level|Device:|Slot:'     # 查询 Controller #1 的所有逻辑设备的关键信息
</code></pre>

<h3>LSI的阵列卡2008/3008</h3>

<p><a href="https://docs.broadcom.com/docs/SAS3IRCU_P16.zip_p">https://docs.broadcom.com/docs/SAS3IRCU_P16.zip_p</a></p>

<p>linux,window <a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/system/SAS3IRCU_P16.zip">SAS3IRCU_P16.zip</a></p>

<pre><code>    lspci | grep -i SAS
</code></pre>

<pre><code>    sas3ircu list   #查看所有控制器
    sas3ircu 0 display  #查看控制器0下所有硬盘信息
    sas3ircu 0 status  #查看控制器0的状态
</code></pre>

<h3>LSI SAS2108/2208/3108阵列卡</h3>

<p>storcli64</p>

<p><a href="https://iknow.lenovo.com.cn/detail/dc_178452.html">https://iknow.lenovo.com.cn/detail/dc_178452.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LVM 扩容]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/01/lvm-extend/"/>
    <updated>2023-01-01T16:25:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/01/lvm-extend</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/yy9knsg/p/16552494.html">https://www.cnblogs.com/yy9knsg/p/16552494.html</a></p>

<p><a href="https://tool.4xseo.com/article/200995.html">https://tool.4xseo.com/article/200995.html</a></p>

<pre><code>    pvdisplay

    vgdisplay

    lvdisplay
</code></pre>

<h4>初始化分区</h4>

<pre><code>    fdisk /dev/vdx
    n

    t
    L
    选 8e LVM分区


    pvcreate /dev/vdx1
</code></pre>

<h4>将分区加入到虚拟卷组名</h4>

<pre><code>    # vgextend 虚拟卷组名 新增的分区

    vgextend centos /dev/vdx1
</code></pre>

<h4>再次查看卷组情况</h4>

<pre><code>    vgdisplay
</code></pre>

<h4>查看当前磁盘情况</h4>

<pre><code>    df -h
    记下需要扩展的文件系统名，例如 /dev/mapper/centos-root

    lvdisplay
    记下需要扩展的文件系统名，例如 /dev/centos/root
</code></pre>

<p>两个是一样的</p>

<pre><code>    ls /dev/centos/root -l
    lrwxrwxrwx. 1 root root 7 Dec 20 20:11 /dev/centos/root -&gt; ../dm-0

    ls -l /dev/mapper/centos-root 
    lrwxrwxrwx. 1 root root 7 Dec 20 20:11 /dev/mapper/centos-root -&gt; ../dm-0
</code></pre>

<h4>扩容已有的卷组容量</h4>

<pre><code>    lvextend -L +需要扩展的容量 需要扩展的文件系统名 

    lvextend -L +29G /dev/mapper/centos-root
</code></pre>

<h4>以上只是卷的扩容，然后我们需要将文件系统扩容</h4>

<pre><code>    cat /etc/fstab | grep centos-root

    /dev/mapper/centos-root /                       xfs     defaults        0 0
</code></pre>

<p>这里可以看到，文件系统是xfs，所以需要xfs的命令来扩展磁盘空间</p>

<pre><code>    xfs_growfs 文件系统名

    xfs_growfs /dev/mapper/centos-root
</code></pre>

<p>df -h 可以看到，现在已经扩容成功了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[磁盘 partx，lsblk，blkid，partprobe]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/07/21/partx-lsblk/"/>
    <updated>2021-07-21T14:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/07/21/partx-lsblk</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_36462472/article/details/84106868">https://blog.csdn.net/qq_36462472/article/details/84106868</a></p>

<h3>总结</h3>

<p>在使用fdisk命令创建分区后，可以使用partx和partprobe使系统内核加载分区信息，然后使用lsblk或partx -s 设备名 查看修改后的设备分区信息，给分区做上文件系统后，可以使用blkid命令查看设备信息，以及其文件系统等信息。</p>

<p>使用<code>partx -s /</code> <code>partx -l</code> 查看分区信息如果出错，可能是信息未被登记，可使用partx -a 设备名 来添加，再进行查看。</p>

<h3>patrx</h3>

<p>修改磁盘分区表后，无需重启，用partx命令告诉内核，分区已改动，内核可以读入新的分区表信息</p>

<p>/proc/partitions 记录了系统中所有硬盘及其上面的分区，包括已挂载和未挂载的。</p>

<p>有些硬盘没有记录分区信息，可能是没有分区，也可能是未记录</p>

<p>对于分区完成，但是尚未挂载的硬盘分区，partx告诉内核去做登记，已备挂载。</p>

<p>partx告诉内核去识别，登记某个硬盘上的分区信息。并不是加载，只是识别并记录而已，或者删除某个分区的信息。</p>

<pre><code>    [root@localhost ~]# partx --help

    Usage:
     partx [-a|-d|-s|-u] [--nr &lt;n:m&gt; | &lt;partition&gt;] &lt;disk&gt;

    Options:
     -a, --add            add specified partitions or all of them
     -d, --delete         delete specified partitions or all of them
     -s, --show           list partitions

     -u, --update         update specified partitions or all of them
     -b, --bytes          print SIZE in bytes rather than in human readable format
     -g, --noheadings     don't print headings for --show
     -n, --nr &lt;n:m&gt;       specify the range of partitions (e.g. --nr 2:4)
     -o, --output &lt;type&gt;  define which output columns to use
     -P, --pairs          use key="value" output format
     -r, --raw            use raw output format
     -t, --type &lt;type&gt;    specify the partition type (dos, bsd, solaris, etc.)
     -v, --verbose        verbose mode

     -h, --help     display this help and exit
     -V, --version  output version information and exit

    Available columns (for --show, --raw or --pairs):
             NR  partition number
          START  start of the partition in sectors
            END  end of the partition in sectors
        SECTORS  number of sectors
           SIZE  human readable size
           NAME  partition name
           UUID  partition UUID
           TYPE  partition type hex or uuid
          FLAGS  partition flags
         SCHEME  partition table type (dos, gpt, ...)

    For more details see partx(8).
</code></pre>

<pre><code>    partx命令：
        -a 设备： 登记某块盘上的所有分区信息。如果分区信息有记录，则报错。
        -d 设备： 删除内核中关于某磁盘的所有分区的记录。（不是卸载）
        -s 设备 ：显示磁盘的分区信息
</code></pre>

<p>通过partx工具让内核重读磁盘分区表信息：</p>

<pre><code>    partx -d /dev/sdb  #因为内核中存在部分未调整磁盘的信息，故先将所有信息清零
    partx -a /dev/sdb  #添加调整后的磁盘分区信息
    partx -s /dev/sdb  #显示磁盘分区信息

    NR   START       END   SECTORS SIZE NAME UUID
     1    2048   2099199   2097152   1G      
     2 2099200 419430399 417331200 199G
</code></pre>

<h3>lsblk命令</h3>

<p>列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息。块设备有硬盘，闪存盘，CD-ROM等等。</p>

<p>lsblk -f 也可以查看 UUID</p>

<p>lsblk和df的区别：</p>

<p>lsblk 查看的是block device，也就是逻辑磁盘的大小</p>

<p>df 查看的是file system，也就是文件系统层的磁盘大小，并且已挂载</p>

<pre><code>    [root@localhost ~]# lsblk -f
    NAME            FSTYPE      LABEL           UUID                                   MOUNTPOINT
    sda                                                                                
    ├─sda1          xfs                         f19cfd60-9c16-4ef9-bebf-a173e11ff163   /boot
    └─sda2          LVM2_member                 ZTRWNx-aK5p-U1by-k0ek-B66L-hIzo-i69WzG 
      ├─centos-root xfs                         1c43a251-c82f-47f2-ac60-5674f8590883   /
      ├─centos-swap swap                        77b30510-cc6c-40e6-a739-57d44fc0f751   [SWAP]
      └─centos-home xfs                         7dcba2d9-4955-4f54-886a-4687969e84dd   /home
    sr0             iso9660     VBox_GAs_6.1.16 2020-10-15-14-48-48-14
</code></pre>

<pre><code>    NAME ：这是块设备名。
    MAJ:MIN ：本栏显示主要和次要设备号。
    RM ：本栏显示设备是否可移动设备。注意，在本例中设备sdb和sr0的RM值等于1，这说明他们是可移动设备。
    SIZE ：本栏列出设备的容量大小信息。例如298.1G表明该设备大小为298.1GB，而1K表明该设备大小为1KB。
    RO ：该项表明设备是否为只读。在本案例中，所有设备的RO值为0，表明他们不是只读的。
    TYPE ：本栏显示块设备是否是磁盘或磁盘上的一个分区。在本例中，sda和sdb是磁盘，而sr0是只读存储（rom）。
    MOUNTPOINT ：本栏指出设备挂载的挂载点。
</code></pre>

<h3>blkid命令</h3>

<p>显示关于可用块设备的信息，他可以识别一个块设备内容的类别（如文件系统，交换区）以及从内容的元数据（如卷标或UUID字段）中获取属性（如tokens和键值对）。它主要有两类作用：用指定的键值对搜索一个设备，或是显示一个或多个设备的键值对。</p>

<p>不添加任何参数直接运行blkid将会输出所有可用的设备，他们的通用唯一识别码（UUID），文件系统类型以及卷标（如果有设置过）</p>

<pre><code>    [root@localhost ~]# blkid
    /dev/sr0: UUID="2020-10-15-14-48-48-14" LABEL="VBox_GAs_6.1.16" TYPE="iso9660" 
    /dev/sda1: UUID="f19cfd60-9c16-4ef9-bebf-a173e11ff163" TYPE="xfs" 
    /dev/sda2: UUID="ZTRWNx-aK5p-U1by-k0ek-B66L-hIzo-i69WzG" TYPE="LVM2_member" 
    /dev/mapper/centos-root: UUID="1c43a251-c82f-47f2-ac60-5674f8590883" TYPE="xfs" 
    /dev/mapper/centos-swap: UUID="77b30510-cc6c-40e6-a739-57d44fc0f751" TYPE="swap" 
    /dev/mapper/centos-home: UUID="7dcba2d9-4955-4f54-886a-4687969e84dd" TYPE="xfs"
</code></pre>

<h3>partprobe</h3>

<p>通知系统分区表的变化</p>

<p>使用fdisk或其他命令创建一个新的分区，然后使用partprobe命令重新读取分区表。这个命令执行完毕后不会输出任何返回信息。</p>
]]></content>
  </entry>
  
</feed>
