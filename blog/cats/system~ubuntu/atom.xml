<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system~ubuntu | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system~ubuntu/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2023-01-24T19:27:19+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ubuntu 18.04增加/etc/rc.local]]></title>
    <link href="http://abcdxyzk.github.io/blog/2020/10/12/ubuntu-rc-local/"/>
    <updated>2020-10-12T20:25:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2020/10/12/ubuntu-rc-local</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41782149/article/details/89001226">https://blog.csdn.net/qq_41782149/article/details/89001226</a></p>

<p>ubuntu18.04不再使用 inited 管理系统，改用 systemd</p>

<h4>1.实现原理</h4>

<p>systemd 默认会读取 /etc/systemd/system 下的配置文件，该目录下的文件会链接 /lib/systemd/system/ 下的文件。一般系统安装完 /lib/systemd/system/ 下会有 rc-local.service 文件，即我们需要的配置文件。</p>

<h4>2.将 /lib/systemd/system/rc-local.service 链接到 /etc/systemd/system/ 目录下面来</h4>

<pre><code>    ln -fs /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service

    修改文件内容

    sudo vim /etc/systemd/system/rc-local.service

    在文件末尾增加
    [Install]
    WantedBy=multi-user.target
    Alias=rc-local.service
</code></pre>

<h4>3. 创建/etc/rc.local文件</h4>

<pre><code>    sudo vim /etc/rc.local

    #!/bin/bash
    ...
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu dns覆盖写入127.0.0.53]]></title>
    <link href="http://abcdxyzk.github.io/blog/2020/10/12/ubuntu-dns/"/>
    <updated>2020-10-12T20:11:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2020/10/12/ubuntu-dns</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/evanxuhe/article/details/90229597">https://blog.csdn.net/evanxuhe/article/details/90229597</a></p>

<p>/etc/resolve.conf 一直是 nameserver 127.0.0.53，无法修改，因为 ubuntu17.0之后特有，systemd-resolvd服务会一直覆盖</p>

<h4>解决办法</h4>

<pre><code>    sudo systemctl stop systemd-resolved
    sudo systemctl disable systemd-resolved
    sudo apt install unbound
    sudo rm -rf /etc/resolv.conf
    sudo vim  /etc/NetworkManager/NetworkManager.conf
    在 [main] 下面添加
    dns=unbound
    将dns服务替换为unbound
    reboot 开机查看resolve.conf发现nameserver自动配置
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GPU温控]]></title>
    <link href="http://abcdxyzk.github.io/blog/2019/08/22/amdgpu_pwm/"/>
    <updated>2019-08-22T16:53:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2019/08/22/amdgpu_pwm</id>
    <content type="html"><![CDATA[<p>目录是 /sys/class/drm/card0/device/hwmon/hwmonX/</p>

<p>换内核之类的操作会改变 hwmonX</p>

<h4>调节脚本</h4>

<pre><code>    #!/usr/bin/python

    import commands;
    import time;

    t0=0
    temp_inc=[90000, 85000, 80000, 70000, 60000, 50000, 40000, 00000];
    pwm_inc=[ 245,   205,   165,   125,   105,   85,    65,    45];

    temp_dec=[89000, 84000, 79000, 67000, 57000, 47000, 37000, 00000];
    pwm_dec=[ 245,   205,   165,   125,   105,   85,    65,    45];


    global pwm1
    pwm1=0;

    def set_pwm(newpwm):
        global pwm1
        if newpwm != pwm1:
            cmd="echo "+str(newpwm)+" &gt; /sys/class/drm/card0/device/hwmon/hwmon3/pwm1";
            r,o = commands.getstatusoutput(cmd);
            pwm1=newpwm;

            #cmd1="cat /sys/class/drm/card0/device/hwmon/hwmon3/pwm1";
            #r,o = commands.getstatusoutput(cmd1);
                    #print cmd
                    #print r, o

    r,o = commands.getstatusoutput("echo 1 &gt; /sys/class/drm/card0/device/hwmon/hwmon3/pwm1_enable");
    while 1:
        r,t = commands.getstatusoutput("cat /sys/class/drm/card0/device/hwmon/hwmon3/temp1_input");
        t = int(t);
        if t - t0 &gt; 0:
            for i in range(0, 8):
                if t &gt;= temp_inc[i]:
                    break;
            #print "inc ", t, temp_inc[i], pwm_inc[i]
            set_pwm(pwm_inc[i]);
        elif t - t0 &lt; 0:
            for i in range(0, 8):
                if t &gt;= temp_dec[i]:
                    break;
            #print "dec ", t, temp_dec[i], pwm_dec[i]
            set_pwm(pwm_dec[i]);

        t0 = t;
        time.sleep(10);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 编译内核、模块]]></title>
    <link href="http://abcdxyzk.github.io/blog/2019/08/22/ubuntu-kernel/"/>
    <updated>2019-08-22T11:33:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2019/08/22/ubuntu-kernel</id>
    <content type="html"><![CDATA[<p><a href="https://launchpad.net/ubuntu/+source/linux/+changelog">https://launchpad.net/ubuntu/+source/linux/+changelog</a></p>

<h4>4.15.0</h4>

<p><a href="https://launchpad.net/ubuntu/bionic/+source/linux/+changelog">https://launchpad.net/ubuntu/bionic/+source/linux/+changelog</a></p>

<p><a href="https://packages.ubuntu.com/xenial/linux-source-4.15.0">https://packages.ubuntu.com/xenial/linux-source-4.15.0</a><br/>
<a href="http://security.ubuntu.com/ubuntu/pool/main/l/linux-hwe/linux-source-4.15.0_4.15.0-58.64~16.04.1_all.deb">http://security.ubuntu.com/ubuntu/pool/main/l/linux-hwe/linux-source-4.15.0_4.15.0-58.64~16.04.1_all.deb</a></p>

<p><a href="https://launchpad.net/ubuntu/xenial/amd64/linux-image-unsigned-4.15.0-58-generic-dbgsym">https://launchpad.net/ubuntu/xenial/amd64/linux-image-unsigned-4.15.0-58-generic-dbgsym</a><br/>
<a href="http://launchpadlibrarian.net/436393485/linux-image-unsigned-4.15.0-58-generic-dbgsym_4.15.0-58.64~16.04.1_amd64.ddeb">http://launchpadlibrarian.net/436393485/linux-image-unsigned-4.15.0-58-generic-dbgsym_4.15.0-58.64~16.04.1_amd64.ddeb</a></p>

<p><a href="https://launchpad.net/ubuntu/bionic/amd64/linux-image-unsigned-4.15.0-58-generic-dbgsym">https://launchpad.net/ubuntu/bionic/amd64/linux-image-unsigned-4.15.0-58-generic-dbgsym</a><br/>
<a href="http://launchpadlibrarian.net/436226708/linux-image-unsigned-4.15.0-58-generic-dbgsym_4.15.0-58.64_amd64.ddeb">http://launchpadlibrarian.net/436226708/linux-image-unsigned-4.15.0-58-generic-dbgsym_4.15.0-58.64_amd64.ddeb</a></p>

<h4>4.18.0</h4>

<p><a href="https://launchpad.net/ubuntu/xenial/+source/linux/+changelog">https://launchpad.net/ubuntu/xenial/+source/linux/+changelog</a></p>

<p><a href="https://packages.ubuntu.com/bionic/linux-source-4.18.0">https://packages.ubuntu.com/bionic/linux-source-4.18.0</a><br/>
<a href="http://security.ubuntu.com/ubuntu/pool/main/l/linux-hwe/linux-source-4.18.0_4.18.0-25.26~18.04.1_all.deb">http://security.ubuntu.com/ubuntu/pool/main/l/linux-hwe/linux-source-4.18.0_4.18.0-25.26~18.04.1_all.deb</a></p>

<p><a href="https://launchpad.net/ubuntu/bionic/amd64/linux-image-4.18.0-25-generic-dbgsym">https://launchpad.net/ubuntu/bionic/amd64/linux-image-4.18.0-25-generic-dbgsym</a><br/>
<a href="http://launchpadlibrarian.net/430863032/linux-image-4.18.0-25-generic-dbgsym_4.18.0-25.26~18.04.1_amd64.ddeb">http://launchpadlibrarian.net/430863032/linux-image-4.18.0-25-generic-dbgsym_4.18.0-25.26~18.04.1_amd64.ddeb</a></p>

<h4>gcc 7 编译内核模块时无法找到 stdarg.h 的问题</h4>

<p><a href="https://blog.gloriousdays.pw/2018/09/09/cannot-find-stdarg-h-on-linux-kernel-4-15-with-gcc-7-3/">https://blog.gloriousdays.pw/2018/09/09/cannot-find-stdarg-h-on-linux-kernel-4-15-with-gcc-7-3/</a></p>

<p>这是一个非常奇怪的错误，出现在 Ubuntu 18.04 上，默认安装的内核版本是 4.15，gcc 是 7.3，在编译内核模块时报错：
<code>
    In file included from ./include/linux/list.h:9:0,
                     from ./include/linux/module.h:9,
                     from /root/Software/newbbr/tcp_tsunami.c:59:
    ./include/linux/kernel.h:6:10: fatal error: stdarg.h: No such file or directory
     #include &lt;stdarg.h&gt;
              ^~~~~~~~~~
    compilation terminated.
</code></p>

<p>gcc 认为找不到 stdarg.h。看这个错误的位置，个人认为应该不是我配置的问题或者是我代码的问题，搜索了一下，也有很多在 4.15 内核上出现的同样错误。目前没有什么很好的解决方案，暂时性的方案是在编译的 Makefile 里面加一行：
<code>
    ccflags-y=-I/usr/lib/gcc/x86_64-linux-gnu/7/include
</code>
如果是 gcc 8，就相应把版本改成 8 就可以了</p>

<h4>编译内核</h4>

<pre><code>    sudo apt-get install libncurses-dev flex bison openssl-dev libssl-dev dkms libelf-dev

    make bindeb-pkg -j8
</code></pre>

<p>按这里没成功 <a href="https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel">https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel</a></p>

<h4>编译perf</h4>

<pre><code>    cd tools/perf
    make
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CPU温控]]></title>
    <link href="http://abcdxyzk.github.io/blog/2019/08/21/intel_pstate/"/>
    <updated>2019-08-21T16:53:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2019/08/21/intel_pstate</id>
    <content type="html"><![CDATA[<h4>常规调节</h4>

<pre><code>    echo 72 &gt; /sys/devices/system/cpu/intel_pstate/max_perf_pct
    echo 1  &gt; /sys/devices/system/cpu/intel_pstate/no_turbo
</code></pre>

<h4>参数解释</h4>

<p><a href="https://www.kernel.org/doc/Documentation/cpu-freq/intel-pstate.txt">https://www.kernel.org/doc/Documentation/cpu-freq/intel-pstate.txt</a></p>

<p>/sys/devices/system/cpu/intel_pstate/</p>

<pre><code>          max_perf_pct: Limits the maximum P-State that will be requested by
          the driver. It states it as a percentage of the available performance. The
          available (P-State) performance may be reduced by the no_turbo
          setting described below.

          min_perf_pct: Limits the minimum P-State that will be requested by
          the driver. It states it as a percentage of the max (non-turbo)
          performance level.

          no_turbo: Limits the driver to selecting P-State below the turbo
          frequency range.

          turbo_pct: Displays the percentage of the total performance that
          is supported by hardware that is in the turbo range. This number
          is independent of whether turbo has been disabled or not.

          num_pstates: Displays the number of P-States that are supported
          by hardware. This number is independent of whether turbo has
          been disabled or not.

    For example, if a system has these parameters:
        Max 1 core turbo ratio: 0x21 (Max 1 core ratio is the maximum P-State)
        Max non turbo ratio: 0x17
        Minimum ratio : 0x08 (Here the ratio is called max efficiency ratio)

    Sysfs will show :
        max_perf_pct:100, which corresponds to 1 core ratio
        min_perf_pct:24, max_efficiency_ratio / max 1 Core ratio
        no_turbo:0, turbo is not disabled
        num_pstates:26 = (max 1 Core ratio - Max Efficiency Ratio + 1)
        turbo_pct:39 = (max 1 core ratio - max non turbo ratio) / num_pstates

    Refer to "Intel庐 64 and IA-32 Architectures Software Developer鈥檚 Manual
    Volume 3: System Programming Guide" to understand ratios.

    There is one more sysfs attribute in /sys/devices/system/cpu/intel_pstate/
    that can be used for controlling the operation mode of the driver:

          status: Three settings are possible:
          "off"     - The driver is not in use at this time.
          "active"  - The driver works as a P-state governor (default).
          "passive" - The driver works as a regular cpufreq one and collaborates
                      with the generic cpufreq governors (it sets P-states as
                      requested by those governors).
          The current setting is returned by reads from this attribute.  Writing one
          of the above strings to it changes the operation mode as indicated by that
          string, if possible.  If HW-managed P-states (HWP) are enabled, it is not
          possible to change the driver's operation mode and attempts to write to
          this attribute will fail.
</code></pre>

<p><a href="https://huataihuang.gitbooks.io/cloud-atlas/os/linux/kernel/cpu/intel_pstate.html">https://huataihuang.gitbooks.io/cloud-atlas/os/linux/kernel/cpu/intel_pstate.html</a></p>

<p><a href="http://www.litrin.net/2018/12/28/cpu%E7%9A%84%E7%94%B5%E6%BA%90%E7%8A%B6%E6%80%81%E5%88%86%E7%B1%BB/">http://www.litrin.net/2018/12/28/cpu%E7%9A%84%E7%94%B5%E6%BA%90%E7%8A%B6%E6%80%81%E5%88%86%E7%B1%BB/</a></p>

<p><img src="/images/system/2019-08-21-1.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
