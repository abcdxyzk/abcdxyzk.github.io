<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/tools/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2023-01-24T19:27:19+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[4个替代phpMyAdmin的工具]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/20/mysql-web/"/>
    <updated>2023-01-20T16:31:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/20/mysql-web</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_34392906/article/details/92377986">https://blog.csdn.net/weixin_34392906/article/details/92377986</a></p>

<p>phpMyAdmin是管理MySQL数据库最流行的Web界面。但也有许多其他的工具，我们可代替phpMyAdmin的使用。</p>

<h4>1. Adminer</h4>

<p>Adminer是我的第一选择使用的，而不是phpMyAdmin。 Adminer是单一的PHP脚本，它可以在文档根目录轻松上传，没有任何安装或配置，访问就可用。</p>

<p>Adminer还可以用来管理SQL服务器，Oracle，PostgreSQL等等。 <a href="http://www.adminer.org/">下载Adminer</a></p>

<h4>2. MyWebSQL</h4>

<p>MyWebSQL是一个最终的台式机替代品，他在Web上管理你的MySQL数据库。</p>

<p>它的界面像自己喜欢的桌面应用程序，你不需要不断切换网页，以简单的做好事情。</p>

<p>只需登录到您的数据库和管理数据库，如果你是在您的桌面上工作！ <a href="http://mywebsql.net/">下载MyWebSQL</a></p>

<h4>3. phpMiniAdmin</h4>

<p>phpMiniAdmin是快速和容易管理MySQL数据库，是phpMyAdmin轻量级的选择。</p>

<p>phpminiadmin是写在只有大小为10KB+，它可以轻松上传到Web服务器的文档根目录，并在Web浏览器访问PHP。 <a href="http://phpminiadmin.sourceforge.net/">下载phpMiniAdmin</a></p>

<h4>4. SQL Buddy</h4>

<p>SQL Buddy是用于MySQL管理的一个很棒的工具，phpMyAdmin的一个替代品。</p>

<p>它超级容易建立，还有一个漂亮的界面。 <a href="http://sqlbuddy.com/">下载SQL Buddy</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpMyAdmin web管理mysql]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/20/mysql-phpMyAdmin/"/>
    <updated>2023-01-20T16:24:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/20/mysql-phpMyAdmin</id>
    <content type="html"><![CDATA[<p><a href="http://t.zoukankan.com/ioveNature-p-6477758.html">http://t.zoukankan.com/ioveNature-p-6477758.html</a></p>

<p>安装MySQL数据库后，用户即可在命令行提示符下进行创建数据库和数据表等各种操作，但这种方法非常麻烦，而且需要有专业的SQL语言知识。PHP官方开发了一个可视化图形管理工具phpMyAdmin，该工具可以运行在各种版本的PHP及MySQL下。通过phpMyAdmin完全可以对数据库进行各种操作，如建立，复制和删除数据等。</p>

<p>phpMyAdmin为初学者提供了图形化的操作界面，这样MySQL数据库的操作就不必再命令提示符下通过命令实现，从而大大提高了开发的效率。用户可以在官方网站 www.phpmyadmin.net 上免费下载到最新版本。</p>

<p><a href="https://github.com/abcdxyzk/abcdxyzk.github.io_files/raw/master/tools/phpMyAdmin-5.2.0-all-languages.zip">phpMyAdmin-5.2.0-all-languages.zip</a></p>

<h3>一、操作数据库</h3>

<p>打开 192.168.0.123/phpMyAdmin 输入数据库的用户名和密码，可成功登陆phpMyAdmin。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP 备份sqlserver]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/20/mssql-asp-dump-sqlserver/"/>
    <updated>2023-01-20T16:11:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/20/mssql-asp-dump-sqlserver</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/yechuan/articles/84208.html">https://www.cnblogs.com/yechuan/articles/84208.html</a></p>

<h3>只有备份</h3>

<pre><code>    &lt;HTML&gt;
    &lt;HEAD&gt;
        &lt;TITLE&gt;SQL Server 数据库的备份&lt;/TITLE&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312"&gt;
    &lt;/HEAD&gt;
    &lt;BODY&gt;
    &lt;form method="post" name=myform&gt;
    选择操作：&lt;INPUT TYPE="radio" NAME="act" id="act_backup" value="backup"&gt;&lt;label for=act_backup&gt;备份&lt;/label&gt;　
    &lt;input type="submit" value="确定"&gt;
    &lt;/form&gt;

    &lt;%

    dim sqlserver,sqlname,sqlpassword,sqlLoginTimeout,databasename,bak_file,act

    sqlserver = "127.0.0.1"     'sql服务器
    sqlname = "dbname"      '用户名
    sqlpassword = "passwd"      '密码
    sqlLoginTimeout = 15        '登陆超时
    databasename = "dbname"
    bak_file = Server.MapPath(".") &amp; "\np.sql"

    act = lcase(request("act"))
    if databasename = "" then
        response.write "input database name"
    else
        if act = "backup" then
            Set srv=Server.CreateObject("SQLDMO.SQLServer")
            srv.LoginTimeout = sqlLoginTimeout
            srv.Connect sqlserver,sqlname, sqlpassword
            Set bak = Server.CreateObject("SQLDMO.Backup")
            bak.Database=databasename
            bak.Devices=Files
            bak.Files=bak_file
            bak.SQLBackup srv
            if err.number&gt;0 then
                response.write err.number&amp;"&lt;font color=red&gt;&lt;br&gt;"
                response.write err.description&amp;"&lt;/font&gt;"
            end if
            Response.write "&lt;font color=green&gt;备份成功!&lt;/font&gt;"
        else
            Response.write "&lt;font color=red&gt;没有选择操作&lt;/font&gt;"
        end if
    end if
    %&gt;
    &lt;/BODY&gt;
    &lt;/HTML&gt;
</code></pre>

<h3>all</h3>

<pre><code>    &lt;HTML&gt;
    &lt;HEAD&gt;
        &lt;TITLE&gt;SQL Server 数据库的备份与恢复&lt;/TITLE&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312"&gt;
    &lt;/HEAD&gt;
    &lt;BODY&gt;

    &lt;form method="post" name=myform&gt;
    选择操作：&lt;INPUT TYPE="radio" NAME="act" id="act_backup" value="backup"&gt;&lt;label for=act_backup&gt;备份&lt;/label&gt;　
    &lt;INPUT TYPE="radio" NAME="act" id="act_restore" value="restore"&gt;&lt;label for=act_restore&gt;恢复&lt;/label&gt;
    &lt;br&gt;数据库名：&lt;INPUT TYPE="text" NAME="databasename" value="&lt;%=request("databasename")%&gt;"&gt;
    &lt;br&gt;文件路径：&lt;INPUT TYPE="text" NAME="bak_file" value="c:\$1.bak"&gt;(备份或恢复的文件路径)&lt;br&gt;
    &lt;input type="submit" value="确定"&gt;
    &lt;/form&gt;

    &lt;%

    dim sqlserver,sqlname,sqlpassword,sqlLoginTimeout,databasename,bak_file,act

    sqlserver = "localhost"       'sql服务器
    sqlname = "sa"            '用户名
    sqlpassword = "sa"        '密码
    sqlLoginTimeout = 15      '登陆超时
    databasename = trim(request("databasename"))
    bak_file = trim(request("bak_file"))
    bak_file = replace(bak_file,"$1",databasename)
    act = lcase(request("act"))

    if databasename = "" then
        response.write "input database name"
    else
        if act = "backup" then
            Set srv=Server.CreateObject("SQLDMO.SQLServer")
            srv.LoginTimeout = sqlLoginTimeout
            srv.Connect sqlserver,sqlname, sqlpassword
            Set bak = Server.CreateObject("SQLDMO.Backup")
            bak.Database=databasename
            bak.Devices=Files
            bak.Files=bak_file
            bak.SQLBackup srv
            if err.number&gt;0 then
                response.write err.number&amp;"&lt;font color=red&gt;&lt;br&gt;"
                response.write err.description&amp;"&lt;/font&gt;"
            end if
            Response.write "&lt;font color=green&gt;备份成功!&lt;/font&gt;"
        elseif act = "restore" then
            '恢复时要在没有使用数据库时进行！
            Set srv=Server.CreateObject("SQLDMO.SQLServer")
            srv.LoginTimeout = sqlLoginTimeout
            srv.Connect sqlserver,sqlname, sqlpassword
            Set rest=Server.CreateObject("SQLDMO.Restore")
            rest.Action=0 ' full db restore
            rest.Database=databasename
            rest.Devices=Files
            rest.Files=bak_file
            rest.ReplaceDatabase=True 'Force restore over existing database
            if err.number&gt;0 then
                response.write err.number&amp;"&lt;font color=red&gt;&lt;br&gt;"
                response.write err.description&amp;"&lt;/font&gt;"
            end if
            rest.SQLRestore srv

            Response.write "&lt;font color=green&gt;恢复成功!&lt;/font&gt;"
        else
            Response.write "&lt;font color=red&gt;没有选择操作&lt;/font&gt;"
       end if
    end if

    %&gt;
    &lt;/BODY&gt;
    &lt;/HTML&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASPMyAdmin web管理sqlserver]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/20/mssql-aspmyadmin/"/>
    <updated>2023-01-20T16:06:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/20/mssql-aspmyadmin</id>
    <content type="html"><![CDATA[<p><a href="http://www.a1vbcode.com/app-3301.asp">http://www.a1vbcode.com/app-3301.asp</a></p>

<p><a href="/download/tools/ASPMyAdmin.zip">ASPMyAdmin.zip</a></p>

<p>备份数据库似乎会提示error</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql union all 比较两个表不同的数据]]></title>
    <link href="http://abcdxyzk.github.io/blog/2023/01/03/mysql-union-all/"/>
    <updated>2023-01-03T16:57:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2023/01/03/mysql-union-all</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/JustDI0209/article/details/122492293">https://blog.csdn.net/JustDI0209/article/details/122492293</a></p>

<p><a href="https://blog.csdn.net/u010931123/article/details/82425580">https://blog.csdn.net/u010931123/article/details/82425580</a></p>

<pre><code>    select * from (select * from rs.zzdmk union all select * from rs2.zzdmk) t group by pbf, sxh HAVING count(*)=1;
</code></pre>

<p>count( * ) = 1 为两张表数据不同的地方（只有一条结果），count( * ) = 2 为两张表数据相同的地方。</p>

<h4>union和union all的区别</h4>

<p>union会自动压缩多个结果集合中的重复结果，而union all则将所有的结果全部显示出来，不管是不是重复。</p>

<h4>Union</h4>

<p>对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序；</p>

<p>UNION在进行表链接后会筛选掉重复的记录，所以在表链接后会对所产生的结果集进行排序运算，删除重复的记录再返回结果。</p>

<p>实际大部分应用中是不会产生重复的记录，最常见的是过程表与历史表UNION</p>

<h4>Union All</h4>

<p>对两个结果集进行并集操作，包括重复行，不进行排序；</p>

<p>如果返回的两个结果集中有重复的数据，那么返回的结果集就会包含重复的数据了。</p>
]]></content>
  </entry>
  
</feed>
