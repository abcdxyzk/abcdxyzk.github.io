<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools~apache2 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/tools~apache2/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-12-31T15:25:29+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[centos7下httpd服务对tmp目录操作]]></title>
    <link href="http://abcdxyzk.github.io/blog/2024/04/26/tools-apache2-tmp/"/>
    <updated>2024-04-26T14:34:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2024/04/26/tools-apache2-tmp</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/jsbba/article/details/105627202">https://blog.csdn.net/jsbba/article/details/105627202</a></p>

<p>在centos7下操作tmp目录出现各种找到不文件等问题，明白文件就在/tmp目录下，权限也有就是读取不到，原因是使用了private tmp</p>

<pre><code>    cat /usr/lib/systemd/system/httpd.service
</code></pre>

<p>找到以下配置</p>

<pre><code>    PrivateTmp=true
</code></pre>

<p>在默认未true时 这个服务对应的tmp目录会虚拟到/tmp/systemd-private-xxxxx-httpd.service-xxxx/这个里面的/tmp文件夹</p>

<p>可以直接讲true改成false</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 之 查看PHP的session]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/09/26/tools-httpd-session/"/>
    <updated>2022-09-26T22:12:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/09/26/tools-httpd-session</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/la-isla-bonita/p/3581362.html">https://www.cnblogs.com/la-isla-bonita/p/3581362.html</a></p>

<p>CentOS 6.5</p>

<p>php配置文件的默认路径 /etc/php.ini</p>

<p>可查看</p>

<p>session.save_path = &ldquo;/var/lib/php/session&rdquo;</p>

<p>删除指定 session 即可强制退出已经登录的用户</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[httpd apache index 显示文件名长度]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/09/24/tools-httpd-index/"/>
    <updated>2022-09-24T20:14:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/09/24/tools-httpd-index</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/cnmumian/p/12177676.html">https://www.cnblogs.com/cnmumian/p/12177676.html</a></p>

<p>通常情况下，文件名过长，打开index后，过长的文件名会最后会显示..</p>

<p>在centos中文件所谓位置 /etc/httpd/conf.d/httpd-autoindex.conf</p>

<h4>在配置文件httpd-autoindex.conf中的修改：</h4>

<pre><code>    IndexOptions FancyIndexing HTMLTable VersionSort NameWidth=* FoldersFirst Charset=UTF-8 SuppressDescription SuppressHTMLPreamble

    其中

    FancyIndexing 支持美化显示；

    HTMLTable 允许底层代码把文件列表生成在一个table元素里面；

    VersionSort 安装版本排序；

    NameWidth=* 页面自动匹配文件名宽度；

    FoldersFirst 安装文件夹优先排列；

    Charset=UTF-8 支持中文显示；

    SuppressDescription 不显示文件描述；
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssl 证书检查]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/08/25/ssl-check/"/>
    <updated>2022-08-25T21:59:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/08/25/ssl-check</id>
    <content type="html"><![CDATA[<p>企业微信https有时正常有时不正常, 但http都正常，检查一下证书配置</p>

<p><a href="https://www.geocerts.com/ssl-checker">https://www.geocerts.com/ssl-checker</a></p>

<p><a href="https://cloud.tencent.com/document/product/400/35243">https://cloud.tencent.com/document/product/400/35243</a></p>

<h4>apache 证书配置</h4>

<p>编辑 /etc/httpd/conf.d 目录下的 ssl.conf 配置文件。修改如下内容：</p>

<pre><code>    &lt;VirtualHost 0.0.0.0:443&gt;
        DocumentRoot "/var/www/html" 
        #填写证书名称
        ServerName cloud.tencent.com 
        #启用 SSL 功能
        SSLEngine on 
        #证书文件的路径
        SSLCertificateFile /etc/httpd/ssl/cloud.tencent.com.crt 
        #私钥文件的路径
        SSLCertificateKeyFile /etc/httpd/ssl/cloud.tencent.com.key 
        #证书链文件的路径
        SSLCertificateChainFile /etc/httpd/ssl/root_bundle.crt 
    &lt;/VirtualHost&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[httpd常见配置]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/08/20/tools-httpd-conf/"/>
    <updated>2022-08-20T16:29:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/08/20/tools-httpd-conf</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/vathe/p/6907742.html">https://www.cnblogs.com/vathe/p/6907742.html</a></p>

<h3>work常用配置</h3>

<pre><code>    &lt;IfModule worker.c&gt;
    StartServers         4
    MaxClients         300     # 最大的请求并发数目
    MinSpareThreads     25
    MaxSpareThreads     75
    ThreadsPerChild     25     # 每个子进程能同时创建的的线程数目
    MaxRequestsPerChild  0     # 每个进程能处理的最大请求数目
    &lt;/IfModule&gt;
</code></pre>

<h3>配置文件</h3>

<pre><code>    /etc/httpd/conf/httpd.conf     主配置文件

    /etc/httpd/conf.d/*.conf     辅助配置文件
</code></pre>

<h4>配置文件语法检查及重新加载配置文件</h4>

<pre><code>    [root@node1 conf]$ httpd -t
    Syntax OK
    [root@node1 conf]$ service httpd reload
</code></pre>

<h3>修改监听的IP和Port</h3>

<pre><code>    Listen  [IP:] PORT  [PROTOCOL]
    IP     本机的IP,本机可能使用多个网卡，每个网卡可能使用多个IP，故而可以指定特定IP，不指定，默认为监听所有IP
    PORT    端口号，不可省略
    PROTOCOL  特定协议,例如 https

    注：Listen指令在同一文件中，如果需要监听多个目标，Listen可以出现多次
</code></pre>

<h3>服务器根目录</h3>

<pre><code>    DocumentRoot "/var/www/html"

    ServerName www.example.com:80   # 服务器名称

    DirectoryIndex index.html  index.html.var # 站点主页面

    AddDefaultCharset UTF-8     # 默认字符集

    Alias /icons/ "/var/www/icons/"    # 路径别名
</code></pre>

<h3>持久化配置</h3>

<pre><code>    KeepAlive Off | On      # 是否开启长连接

    MaxKeepAliveRequests 100    # 保持长连接最大个数

    KeepAliveTimeout 15     #  单个连接最长连接时间
</code></pre>

<h3>动态加载模块</h3>

<pre><code>    LoadModule &lt;mod_name&gt; &lt;mod_path&gt;
    &lt;mod_name&gt; 模块名称
    &lt;mod_path&gt; 模块路径，支持使用相对路径，相对于ServerRoot  /etc/httpd
</code></pre>

<h3>MPM（多路处理模块）配置</h3>

<h4>查看</h4>

<pre><code>    httpd -l      # 查看静态模块
    httpd -M      # 查看动态加载的模块
</code></pre>

<h4>更换</h4>

<pre><code>    CentOS 6
    /etc/sysconfig/httpd
    # HTTPD=/usr/sbin/httpd.worker    # 注释表示使用默认方式prefork工作，否则表示使用worker方式工作

    CentOS7
    /etc/httpd/conf.modules.d/00-mpm.conf
    LoadModule mpm_worker_module modules/mod_mpm_worker.so
    # 注释或打开相关代码
</code></pre>

<h3>prefork常用配置</h3>

<pre><code>    &lt;IfModule prefork.c&gt;
    StartServers       8       #  起始开启的子进程数
    MinSpareServers    5       #  最小空闲子进程数
    MaxSpareServers   20       #  最大空闲子进程数
    ServerLimit      256       #  最大的进程数
    MaxClients       256       #  最大的请求并发数
    MaxRequestsPerChild  4000  #  每个子进程最多能处理的请求数
    &lt;/IfModule&gt;
</code></pre>

<h3>work常用配置</h3>

<pre><code>    &lt;IfModule worker.c&gt;
    StartServers         4
    MaxClients         300     # 最大的请求并发数目
    MinSpareThreads     25
    MaxSpareThreads     75
    ThreadsPerChild     25     # 每个子进程能同时创建的的线程数目
    MaxRequestsPerChild  0     # 每个进程能处理的最大请求数目
    &lt;/IfModule&gt;
</code></pre>

<h3>日志配置</h3>

<pre><code>    ErrorLog logs/error_log     # 错误日志目录

    LogLevel warn               # 日志记录等级

    LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined   # 日志格式定义

    %h：客户端IP地址；
    %l：Remote User, 通常为一个减号（“-”）；
    %u：Remote user (from auth; may be bogus if return status (%s) is 401)；非为登录访问时，其为一个减号；
    %t：服务器收到请求时的时间；
    %r：First line of request，即表示请求报文的首行；记录了此次请求的“方法”，“URL”以及协议版本；
    %&gt;s：响应状态码；
    %b：响应报文的大小，单位是字节；不包括响应报文的http首部；
    %{Referer}i：请求报文中首部“referer”的值；即从哪个页面中的超链接跳转至当前页面的；
    %{User-Agent}i：请求报文中首部“User-Agent”的值；即发出请求的应用程序；
</code></pre>

<p>站点访问控制可分为两类，基于文件路径控制和基于URL路径控制。</p>

<h3>基于文件路径访问控制</h3>

<pre><code>    &lt;Directory "DocuRoot"&gt;
    ...
    &lt;/Directory "DocuRoot"&gt;
    &lt;FILE ""&gt;
    ...
    &lt;/FILE ""&gt;

    &lt;FileMatch "PATTERN"&gt;
    ...
    &lt;/FileMatch "PATTERN"&gt;
</code></pre>

<h3>基于URL路径访问控制</h3>

<pre><code>    &lt;Location ""&gt;
    ...
    &lt;/Location ""&gt;

    &lt;LocationMatch ""&gt;
    ...
    &lt;/LocationMatch ""&gt;
</code></pre>

<h3>常见选项</h3>

<pre><code>    Option
        Indexes     # 访问的url不存在时，返回父路径的索引列表
        Includes
        FollowSymLinks    # 允许跟踪链接文件所指向的文件
        SymLinksifOwnerMatch  # 仅允许跟踪链接文件属主
        ExecCGI               #  支持CGI脚本
        MultiViews
        All        所有选项，除了 MultiViews
        None    不支持上述选项

    AllowOverride   no | yes  是否允许子目录重载特性
</code></pre>

<h3>黑名单（白名单）</h3>

<pre><code>    Order allow, deny

    [ Allow | Deny ] from
        all
        example.org
        10.1.2.3
        10  172.20
</code></pre>

<h2>基于用户的访问控制</h2>

<h4>用户认证类型</h4>

<pre><code>      基本认证：Basic，明文发送
      摘要认证：digest
</code></pre>

<h4>虚拟用户：</h4>

<p>仅用于访问某服务或获取某资源的凭证；</p>

<h4>账号和密码的存储机制：</h4>

<pre><code>      文本文件：.htpasswd
      SQL数据库
      dbm：数据库引擎，提供API
      ldap:
</code></pre>

<h4>配置</h4>

<pre><code>    &lt;Directory /&gt;
            Options none
            AllowOverride AuthConfig
            AuthType Basic     # 明文发送
            AuthName "admin area"   # 允许访问的用户
            AuthBasicProvider file
            AuthUserFile /etc/httpd/conf/.htpasswd
            Require valid-user     # 文件中所有用户均可访问
            Require group GROUP    # 指定组
            AuthGroupFile GROUP_FILE   # 指定组口令文件
    &lt;/Directory&gt;
</code></pre>

<h4>生成认证文件.htpasswd</h4>

<pre><code>    htpasswd [option] passwdfile username
        选项：
        -c：创建一个passwdfile，如果passwdfile已经存在，那么它会重新写入并删除原有内容
        -m：以md5的格式编码存储用户的密码信息
        -s：sha1加密用户密码；
        -D：删除指定用户
</code></pre>
]]></content>
  </entry>
  
</feed>
