<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools~base | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/tools~base/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-06-20T15:29:35+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[win RunAsDate]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/11/30/RunAsDate/"/>
    <updated>2022-11-30T19:21:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/11/30/RunAsDate</id>
    <content type="html"><![CDATA[<p><a href="http://www.kkx.net/soft/33716.html">http://www.kkx.net/soft/33716.html</a></p>

<p>RunAsDate中文版是一款可以让你的程序、软件以指定日期运行的软件，比如现在是2022年，你可以让软件启动于2020年，这样一些试用软件就不会检测到过期了~你也无需去修改系统时间，甚至你还可以建立运行在特定日期时间的快捷方式，到时直接运行即可</p>

<p><a href="/download/tools/RunAsDate.zip">RunAsDate.zip</a></p>

<p><img src="/images/tools/20221130-1.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[win7 wifi 热点共享]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/11/07/win7-wifi-share/"/>
    <updated>2022-11-07T12:13:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/11/07/win7-wifi-share</id>
    <content type="html"><![CDATA[<p><a href="https://www.win7zhijia.cn/jiaocheng/win7_32893.html">https://www.win7zhijia.cn/jiaocheng/win7_32893.html</a></p>

<h3>步骤如下：</h3>

<p>1、按WIN+R调出 &ldquo;运行&rdquo; 栏，输入 cmd , 以管理员身份运行。</p>

<p>输入命令
<code>
    netsh wlan set hostednetwork mode=allow ssid=kktest key=12345678
</code>
启动虚拟wifi网卡，其中ssid等于后的参数为网络名，key为密钥。输入命令后，enter键回车，会提示启动承载网络。</p>

<ol>
<li>打开网络共享中心，点击 &ldquo;更改适配器"。我们会看到一个名叫 "无线网络连接2&rdquo; 的网络连接，这就是Win7自带的虚拟wifi网卡，</li>
</ol>


<p>接着右键点击 &ldquo;<b>正在连接的网络</b>&rdquo; ，属性，看到 &ldquo;共享&rdquo; 选项卡，点击进入，勾选 &ldquo;允许其他网络用户通过此计算机的Internet连接来连接&rdquo; ，并选择 &ldquo;无线网络连接2&rdquo; 来连接</p>

<p>3、打开命令提示符，输入命令，
<code>
    netsh wlan start hostednetwork
</code>
启动承载网络，打开手机的wlan，会搜到一个名叫 &ldquo;kktest&rdquo; 的网络，此时输入刚设好的密钥 12345678 ，就可以了。</p>

<p>4、输入命令，
<code>
    netsh wlan show hostednetwork
</code>
即可查看所创建网络的基本信息，如wifi名称、最大连接数、已连接数，</p>

<p>使用
<code>
    netsh wlan show hostednetwork setting=security
</code>
可以查看所创建网络的密码</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[usb网卡驱动]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/09/17/usb-eth/"/>
    <updated>2022-09-17T22:24:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/09/17/usb-eth</id>
    <content type="html"><![CDATA[<p><a href="https://raw.githubusercontent.com/abcdxyzk/abcdxyzk.github.io_files/master/tools/qts1081b%E9%A9%B1%E5%8A%A8.zip">usb2.0 100Mb qts1081b</a></p>

<p><a href="https://raw.githubusercontent.com/abcdxyzk/abcdxyzk.github.io_files/master/tools/rtl8153qd_70065.zip">usb3.0 1000Mb tengfei rtl8153qd</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[耳机的区别 CTIA OMTP]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/07/20/tools-audio/"/>
    <updated>2021-07-20T14:48:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/07/20/tools-audio</id>
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/21936554">https://www.zhihu.com/question/21936554</a></p>

<p>美日欧几大电信运营商创立的OMTP（开放移动终端平台）发布的标准，即我们常说的OMTP标准；</p>

<p>CTIA（美国无线通信和互联网协会）发布的标准，即CTIA标准，或者俗称AHJ（美国头戴耳机插孔）标准。</p>

<p>这两种标准不约而同地采用了对3.5mm耳机进行扩展的方案。两者在电气性能上没有根本差别，唯一的差异就在于最内侧两环的接线是相反的：</p>

<p><img src="/images/tools/20210720-1.png" alt="" /></p>

<p>CTIA由外向内分别是耳机左声道、耳机右声道、地线、麦克风；</p>

<p>OMTP由外向内分别是耳机左声道、耳机右声道、麦克风、地线。</p>

<p>这就导致了两者的不兼容。如果把OMTP耳机插在只支持CTIA的设备上，要么没有声音，要么只有一边耳机有声音，麦克风完全无效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux下logrotate 配置和理解]]></title>
    <link href="http://abcdxyzk.github.io/blog/2021/06/06/tools-log/"/>
    <updated>2021-06-06T22:59:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2021/06/06/tools-log</id>
    <content type="html"><![CDATA[<pre><code>    systemctl restart rsyslog
</code></pre>

<hr />

<p><a href="https://blog.csdn.net/cjwid/article/details/1690101">https://blog.csdn.net/cjwid/article/details/1690101</a></p>

<h4>一、logrotate 配置</h4>

<p>logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件，我们把它叫做"转储"。我们可以根据日志文件的大小，也可以根据其天数来转储，这个过程一般通过 cron 程序来执行。
logrotate 程序还可以用于压缩日志文件，以及发送日志到指定的E-mail 。</p>

<p>logrotate 的配置文件是 /etc/logrotate.conf。主要参数如下表：</p>

<pre><code>    参数 功能
    compress 通过gzip 压缩转储以后的日志
    nocompress 不需要压缩时，用这个参数
    copytruncate 用于还在打开中的日志文件，把当前日志备份并截断
    nocopytruncate 备份日志文件但是不截断
    create mode owner group 转储文件，使用指定的文件模式创建新的日志文件
    nocreate 不建立新的日志文件
    delaycompress 和 compress 一起使用时，转储的日志文件到下一次转储时才压缩
    nodelaycompress 覆盖 delaycompress 选项，转储同时压缩。
    errors address 专储时的错误信息发送到指定的Email 地址
    ifempty 即使是空文件也转储，这个是 logrotate 的缺省选项。
    notifempty 如果是空文件的话，不转储
    mail address 把转储的日志文件发送到指定的E-mail 地址
    nomail 转储时不发送日志文件
    olddir directory 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统
    noolddir 转储后的日志文件和当前日志文件放在同一个目录下
    prerotate/endscript 在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行
    postrotate/endscript 在转储以后需要执行的命令可以放入这个对，这两个关键字必须单独成行
    daily 指定转储周期为每天
    weekly 指定转储周期为每周
    monthly 指定转储周期为每月
    rotate count 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份
    tabootext [+] list 让logrotate 不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和 ~
    size size 当日志文件到达指定的大小时才转储，Size 可以指定 bytes (缺省)以及KB (sizek)或者MB (sizem).
</code></pre>

<h4>二、缺省配置 logrotate</h4>

<p>logrotate 缺省的配置 /etc/logrotate.conf。
Red Hat Linux 缺省安装的文件内容是：</p>

<pre><code>    # see "man logrotate" for details
    # rotate log files weekly
    weekly

    # keep 4 weeks worth of backlogs
    rotate 4

    # send errors to root
    errors root
    # create new (empty) log files after rotating old ones
    create

    # uncomment this if you want your log files compressed
    #compress # 指定不压缩转储文件，如果需要压缩，去掉注释就可以了。

    # RPM packages drop log rotation information into this directory
    include /etc/logrotate.d

    # no packages own lastlog or wtmp --we'll rotate them here
    /var/log/wtmp {
        monthly
        create 0664 root utmp
        rotate 1
    }

    /var/log/lastlog {
        monthly
        rotate 1
    }

    # system-specific logs may be configured here
</code></pre>

<h4>三、使用include 选项读取其他配置文件</h4>

<p>include 选项允许系统管理员把分散到几个文件的转储信息，集中到一个
主要的配置文件。当 logrotate 从logrotate.conf 读到include 选项时，会从指定文件读入配置信息，就好像他们已经在/etc/logrotate.conf 中一样。</p>

<p>第13行 include /etc/logrotate.d 告诉 logrotate 读入存放在/etc/logrotate.d 目录中的日志转储参数，当系统中安装了RPM 软件包时，使用include 选项十分有用。RPM 软件包的日志转储参数一般存放在/etc/logrotate.d 目录。</p>

<p>include 选项十分重要，一些应用把日志转储参数存放在 /etc/logrotate.d 。</p>

<p>典型的应用有：apache, linuxconf, samba, cron 以及syslog。</p>

<p>这样，系统管理员只要管理一个 /etc/logrotate.conf 文件就可以了。</p>

<h4>使用 prerotate 和 postrotate 选项</h4>

<p>下面的例子是典型的脚本 /etc/logrotate.d/syslog，这个脚本只是对 /var/log/messages 有效。</p>

<pre><code>    /var/log/messages
    {
        prerotate
            /usr/bin/chattr -a /var/log/messages
        endscript
        postrotate
            /usr/bin/kill -HUP syslogd
            /usr/bin/chattr +a /var/log/messages
        endscript
    }
</code></pre>

<p>prerotate 命令指定转储以前的动作/usr/bin/chattr -a 去掉/var/log/messages文件的"只追加"属性 endscript 结束 prerotate 部分的脚本postrotate 指定转储后的动作</p>

<p>/usr/bin/killall -HUP syslogd</p>

<p>用来重新初始化系统日志守护程序 syslogd</p>

<p>/usr/bin/chattr +a /var/log/messages</p>

<p>重新为 /var/log/messages 文件指定"只追加"属性，这样防治程序员或用户覆盖此文件。</p>

<p>最后的 endscript 用于结束 postrotate 部分的脚本</p>
]]></content>
  </entry>
  
</feed>
