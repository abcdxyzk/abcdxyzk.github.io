<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools~picture | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/tools~picture/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2024-05-16T17:25:48+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ffmpeg 缩小视频、合并视频]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/08/07/picture-ffmpeg/"/>
    <updated>2022-08-07T19:01:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/08/07/picture-ffmpeg</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_45049908/article/details/103962451">https://blog.csdn.net/weixin_45049908/article/details/103962451</a></p>

<h2>使用ffmpeg修改和压缩视频文件格式</h2>

<h4>更改视频文件格式</h4>

<pre><code>    /root/ffmpeg-5.0/ffmpeg -y -i test.mp4 out.mp4
</code></pre>

<h4>压缩视频文件</h4>

<pre><code>    /root/ffmpeg-5.0/ffmpeg -y -i test.avi -s 400x240 -vcodec libx264 -preset fast -b 80000 -r 25 out.mp4

    -y: 当已存在out.mp4是，不提示是否覆盖。
    -i : test.avi 输入文件名，可以自己修改路径和名字
    -s: 400x240 输出的分辨率，注意片源一定要是16:9的不然会变形
    -vcodec -libx264: 输出文件使用的编解码器。
    -preset fast: 使用libx264做为编解码器时，需要带上这个参数。
    -b: 80000 视频数据流量，用-b xxx表示使用固定码率，数字可更改；还可以用动态码率如：-qscale 4和-qscale 6，4的质量比6高（一般用80000就可以了，否则文件会很大）
    -acodec: aac 音频编码用AAC
    -ac 2 声道数1或2
    -ar: 48000 声音的采样频率
    -ab: 128 音频数据流量，一般选择32、64、96、128#-vol 200 200%的音量，可更改（如果源文件声音很小，可以提升10到20倍1000%~2000%）
    -r: 25 帧数
</code></pre>

<h4>下载m3u8文件</h4>

<pre><code>    /root/ffmpeg-5.0/ffmpeg -i "http://a.com/b.m3u8" out.mp4
</code></pre>

<h4>合并 mp4</h4>

<pre><code>    cat ff1
    file k4_1.1.1_大数据案例.mp4
    file k4_1.1.2_大数据.mp4
    file k4_1.1.3_数与数据.mp4
    file k4_1.2_数据科学.mp4
    file k4_1.3_“思维”辨析.mp4


    cat ff.sh
    /root/ffmpeg-5.0/ffmpeg -f concat -safe 0 -i ff1 -c copy k4_f1.mp4
</code></pre>

<h4>mp4 转 ts, 合并 ts 为 mp4</h4>

<pre><code>    /root/ffmpeg-5.0/ffmpeg -i 9.2.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 9.2.ts

    /root/ffmpeg-5.0/ffmpeg -i "concat:1.1.ts|1.2.ts|2.1.ts|2.2.ts|2.3.ts|2.4.ts|3.1.ts|3.2.ts" -acodec copy -vcodec copy -absf aac_adtstoasc oo1.mp4
</code></pre>

<h4>截取视频</h4>

<pre><code>    /root/ffmpeg-5.0/ffmpeg -i p0.mp4 -c copy -t 1800 -copyts p1.mp4

    /root/ffmpeg-5.0/ffmpeg -i p0.mp4 -c copy -ss 00:20:00 -to 00:30:00 -copyts p2.mp4
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[命令调整图片大小、格式等]]></title>
    <link href="http://abcdxyzk.github.io/blog/2022/08/07/picture-img/"/>
    <updated>2022-08-07T18:56:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2022/08/07/picture-img</id>
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/lyl0618/p/13904216.html">https://www.cnblogs.com/lyl0618/p/13904216.html</a></p>

<h2>convert</h2>

<h4>减少图片的存储大小</h4>

<pre><code>    convert image.jpg -resize 50% image_new.jpg
</code></pre>

<h2>mogrify</h2>

<h4>修改图片的大小</h4>

<pre><code>    mogrify -resize 800X600 file.jpg
</code></pre>

<p>file.jpg 将被调整到 <code>800*600</code> 的大小。注意，如果原始图片的大小是 <code>1200*900</code> ，那么图片不能被调整到 <code>800*1200</code> ，而只能调整到<code>800*550</code>。</p>

<h4>转换图片格式</h4>

<pre><code>    mogrify -format png test.jpg
</code></pre>

<p>将test.jpg转换到test.png</p>

<h4>减少图片的存储大小</h4>

<pre><code>    mogrify -quality 80% surendra.jpg 
</code></pre>

<p>这是通过降低图片质量达到降低存储大小的效果。</p>

<h2>identify</h2>

<h4>获取图片信息</h4>

<pre><code>    identify test.jpg

    identify -verbose test.jpg
</code></pre>
]]></content>
  </entry>
  
</feed>
